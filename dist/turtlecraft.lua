local a="{\"minify\":true,\"maxDigs\":300,\"maxMoves\":10,\"maxAttacks\":64,\"recoveryPath\":\"turtlecraft/recovery/\",\"version\":\"2.0.0\",\"pastebin\":\"nTNP03Bw\",\"logsPath\":\"turtlecraft/logs/\",\"logsLevel\":1,\"fuelItems\":[17,162,263,327,369],\"build\":\"1509451503578\",\"env\":\"test\"}"local b={}print((function()local c={}local d={}b.export=function(e,f)if c[e]~=nil then error('module '..e..' exists')end;local g=type(f)~='function'c[e]={resolved=g,value=f}return{onready=function(h)if type(h)~='function'then error('callback must be a function')end;table.insert(d,h)end}end;b.import=function(e)if not c[e]then error('module '..e..' does not exist.')end;if not c[e].resolved then c[e].value=c[e].value()c[e].resolved=true end;return c[e].value end;b.start=function()if d==false then error('TurtleCraft started twice!')end;for _,h in ipairs(d)do h()end;d=false end end)());
b.export('services/config',function()local i=b.import('services/json').parse(a or'{}')i.recoveryPath=i.recoveryPath:gsub('[%s/]+$','')i.logsPath=i.logsPath:gsub('[%s/]+$','')return i end);
b.export('services/io',function()local j;j={readKey=function(k)if k then os.startTimer(k)end;local l,m,n;repeat l,m,n=os.pullEvent()until l=="key"or l=="timer"if l=="timer"then return false,false end;return m,n end,setCancelKey=function(m,o)parallel.waitForAny(o,function()repeat local _,p=os.pullEvent('key')until p==m end)end,centerLine=function(q,r,s)if s==nil then _,s=term.getCursorPos()end;local t=term.getSize()local u=math.ceil(t/2-q:len()/2)+1;if u<0 then term.setCursorPos(1,s)term.write(q:sub(math.abs(u)+1,u-1))return end;if r~=nil then term.setCursorPos(1,s)term.write(r:rep(t))end;term.setCursorPos(u,s)term.write(q)end,centerPage=function(q,r)local v={}for s in q:gmatch('[^\n]+')do table.insert(v,s)end;local w=#v;local _,x=term.getSize()local y=math.floor(x/2-w/2)for z=1,w do j.centerLine(v[z],r,y+z)end end,wordWrap=function(q,t)local v={}local s=''for A in q:gmatch('[^\n]*\n?')do A=A:gsub('\n','')for B in A:gmatch('[^%s]+%s*')do if(s..B):len()>t then table.insert(v,s)s=''end;s=s..B end;if s:len()>0 or A:len()==0 then table.insert(v,s)s=''end end;return table.concat(v,'\n'),v end,writeBlock=function(q,C,D)for s in q:gmatch('[^\n]*\n?')do term.setCursorPos(C,D)term.write(s)D=D+1 end end}return j end);
b.export('services/json',function()local E;E={trim=function(F)return F:gsub('^%s+',''):gsub('%s+$','')end,parseNull=function(F)if not F:lower():find('^%s*null')then return false,nil,F end;local G=F:gsub('^%s*null','')return true,nil,G end,parseNumber=function(F)if not F:find('^%s*-?%d+')then return false,nil,F end;local G=E.trim(F)local H=G:match('^-?%d+')or G:match('^-?%d+%.%d+')G=G:sub(H:len()+1)return true,tonumber(H),G end,parseBoolean=function(F)local G=E.trim(F)local H=G:lower():match('^true')or G:lower():match('^false')if H==nil then return false,nil,G end;G=G:sub(H:len()+1)return true,H=='true',G end,parseString=function(F)if not F:find('^%s*"')then return false,nil,F end;local G=F:gsub('^%s*"','')local H=''local I=G:match('^[^\\"]*[\\"]')while I~=nil do G=G:sub(I:len()+1)if I:sub(-1)=='"'then H=H..I:sub(1,-2)return true,H,G end;H=H..I:sub(1,-2)local J=G:sub(1,1)G=G:sub(2)if J=='"'then H=H..'"'end;if J=='\\'then H=H..'\\'end;if J=='/'then H=H..'/'end;if J=='b'then H=H..'\b'end;if J=='f'then H=H..'\f'end;if J=='n'then H=H..'\n'end;if J=='r'then H=H..'\r'end;if J=='t'then H=H..'\t'end;if J=='u'then local K=tonumber(G:sub(1,4),16)%256;G=G:sub(5)H=H..string.char(K)end;I=G:match('[^\\"]*[\\"]')end;return false,G:len()end,parseArray=function(F)if not F:find('^%s*%[')then return false,nil,F end;local L={}local M,H,G=E.parseNext(F:gsub('^%s*%[',''))while M do table.insert(L,H)G=E.trim(G)local N=G:sub(1,1)G=G:sub(2)if N==']'then return true,L,G end;if N~=','then return false,G:len()end;M,H,G=E.parseNext(G)end;return false,G:len()end,parseObject=function(F)if not F:find('^%s*%{')then return false,nil,F end;local L={}local M,O,G=E.parseString(F:gsub('^%s*%{',''))while M do G=E.trim(G)if G:sub(1,1)~=':'then return false,G:len()end;G=G:sub(2)local P,H,Q=E.parseNext(G)G=Q;if not P then return false end;L[O]=H;G=E.trim(G)local N=G:sub(1,1)G=G:sub(2)if N=='}'then return true,L,G end;if N~=','then return false,G:len()end;M,O,G=E.parseString(G)end;return false,G:len()end,parseNext=function(F)for z,R in ipairs({E.parseNull,E.parseNumber,E.parseBoolean,E.parseString,E.parseArray,E.parseObject})do local S,H,G=R(F)if S then return true,H,G end end;return false,F:len()end,parse=function(F)local S,H=E.parseNext(F)if S then return H else return nil end end,format=function(H)if type(H)=='nil'then return'null'end;if type(H)=='boolean'then return tostring(H)end;if type(H)=='number'then return tostring(H)end;if type(H)=='string'then H=H:gsub('\\','\\\\')H=H:gsub('\"','\\"')H=H:gsub('\/','\\/')H=H:gsub('\b','\\b')H=H:gsub('\f','\\f')H=H:gsub('\n','\\n')H=H:gsub('\r','\\r')H=H:gsub('\t','\\t')return'"'..H..'"'end;if type(H)=='table'and#H>0 then local T={}for z,F in ipairs(H)do table.insert(T,E.format(F))end;return'['..table.concat(T,',')..']'end;if type(H)=='table'then local U={}for V,W in pairs(H)do table.insert(U,'"'..V..'":'..E.format(W))end;return'{'..table.concat(U,',')..'}'end end}return E end);
b.export('services/logger',function()local i=b.import('services/config')fs.delete(i.logsPath)local function X(Y,Z,...)local a0=table.pack(...)for z,W in ipairs(a0)do a0[z]=tostring(W)end;xpcall(function()if i.logsLevel>Z then return end;Y=Y or'general.log'Y=i.logsPath..'/'..Y:gsub('^[%s/]+','')local a1=tostring(os.time())..'::'..table.concat(a0,',')local a2=fs.open(Y,'a')a2.writeLine(a1)a2.close()end,function(a3)print('logger failed')print(a3)end)end;return{to=function(Y)return{info=function(...)X(Y,0,...)end,warn=function(...)X(Y,1,...)end,error=function(...)X(Y,2,...)end}end,info=function(...)X(nil,0,...)end,warn=function(...)X(nil,1,...)end,error=function(...)X(nil,2,...)end}end);
b.export('services/plugins',function()local a4,a5,a6;a4={list=function()local a7=a6(a5,function(a8)return a8.order end,function(a9)return a6(a9,function(z)return z.title end)end)local aa={}for _,W in ipairs(a7)do table.insert(aa,{title=W.title,start=W.start})end;return aa end,register=function(ab,y,ac)local ad='Usage: TurtleCraft.import("services/plugins").register(<title>, <start function>, <optional order>);'if type(y)~='function'then error(ad)end;if type(ab)~='string'then error(usages)end;if ac~=nil and type(ac)~='number'then error(ad)end;ab=ab:gsub('^%s+',''):gsub('%s+$','')ac=ac or 0;for _,W in ipairs(a5)do if ab:lower()==W.title:lower()then error('Plugin "'..ab..'" already registered!')end end;table.insert(a5,{title=ab,start=y,order=ac})end}a5={}a6=function(T,ae,af)local a9={}for _,W in ipairs(T)do local O=ae(W)if a9[O]==nil then a9[O]={}end;table.insert(a9[O],W)end;local a7={}for V in pairs(a9)do table.insert(a7,V)end;table.sort(a7)local L={}for _,V in ipairs(a7)do if af and#a9[V]>0 then a9[V]=af(a9[V])end;for _,W in ipairs(a9[V])do table.insert(L,W)end end;return L end;return a4 end);
b.export('services/recovery',function()local ag,ah,ai;local i=b.import('services/config')local aj=b.import('services/logger')local j=b.import('services/io')local ak=i.recoveryPath..'/position.dat'local al=fs.open(ak,'a')local am=i.recoveryPath..'/tasks.dat'local an={}ag={location={},face=function(ao)aj.info('Recovery.face',ao)local ap=ao%4-ah.f;if ap==0 then return true end;if ap>2 then ap=-1 end;if ap<-2 then ap=1 end;local aq=ap>0 and turtle.turnRight or turtle.turnLeft;local e=ap>0 and'right'or'left'for z=1,math.abs(ap)do aq()al.writeLine(e)al.flush()ai.cleanPosition()end;ah.f=(ah.f+ap)%4;return true end,moveTo=function(ar,as,at)return ai.navigateTo('moveTo',ag.moveForward,ag.moveUp,ag.moveDown,ar,as,at)end,moveForward=function()aj.info('Recovery.moveForward')return ai.retry(function()if turtle.forward()then al.writeLine('forward')al.flush()ai.cleanPosition()ai.processForward()return true end;return false end,i.maxMoves)end,moveUp=function()aj.info('Recovery.moveUp')return ai.retry(function()if turtle.up()then al.writeLine('up')al.flush()ai.cleanPosition()ai.processUp()return true end;return false end,i.maxMoves)end,moveDown=function()aj.info('Recovery.moveDown')return ai.retry(function()if turtle.down()then al.writeLine('down')al.flush()ai.cleanPosition()ai.processDown()return true end;return false end,i.maxMoves)end,digTo=function(ar,as,at)return ai.navigateTo('digTo',ag.digForward,ag.digUp,ag.digDown,ar,as,at)end,digForward=function()aj.info('Recovery.digForward')return ai.digMove(turtle.detect,turtle.dig,turtle.attack,function()if turtle.forward()then al.writeLine('forward')al.flush()ai.cleanPosition()ai.processForward()return true end;return false end)end,digUp=function()aj.info('Recovery.digUp')return ai.digMove(turtle.detectUp,turtle.digUp,turtle.attackUp,function()if turtle.up()then al.writeLine('up')al.flush()ai.cleanPosition()ai.processUp()return true end;return false end)end,digDown=function()aj.info('Recovery.digDown')return ai.digMove(turtle.detectDown,turtle.digDown,turtle.attackDown,function()if turtle.down()then al.writeLine('down')al.flush()ai.cleanPosition()ai.processDown()return true end;return false end)end,excavateTo=function(ar,as,at)return ai.navigateTo('excavateTo',ag.excavateForward,ag.excavateUp,ag.excavateDown,ar,as,at)end,excavateForward=function()aj.info('Recovery.excavateForward')ai.digDetect(turtle.detectUp,turtle.digUp)ai.digDetect(turtle.detectDown,turtle.digDown)return ag.digForward()end,excavateUp=function()aj.info('Recovery.excavateUp')ai.digDetect(turtle.detect,turtle.dig)return ag.digUp()end,excavateDown=function()aj.info('Recovery.excavateDown')ai.digDetect(turtle.detect,turtle.dig)return ag.digDown()end,start=function(...)aj.info('Recovery.start')local a0=table.pack(...)for z,W in ipairs(a0)do a0[z]=tostring(W)end;local au=table.concat(a0,' ')local a2=fs.open(am,'a')a2.writeLine(au)a2.close()table.insert(an,au)end,finish=function()aj.info('Recovery.finish')local a2=fs.open(am,'a')a2.writeLine('end')a2.close()table.remove(an)local G=ai.readTasks()if#G==0 then fs.open(am,'w').close()local av='location '..ah.x..' '..ah.y..' '..ah.z..' '..ah.f;al.close()al=fs.open(ak,'w')al.writeLine(av)end end,recover=function()aj.info('Recovery.recover')ai.recoverPosition()if#ai.readTasks()==0 then return end;repeat b.import('ui/views/notification').show('Recovering...\nPress Q to cancel')local O=j.readKey(60)until O==false or O==keys.q;b.import('ui/views/notification').show('Recovering\nLast Session')ai.recoverTasks()end,reset=function()aj.info('Recovery.reset')fs.open(am,'w')an={}al=fs.open(ak,'w')ah.x=0;ah.y=0;ah.z=0;ah.f=0 end}ah={x=0,y=0,z=0,f=0}setmetatable(ag.location,{__index=ah,__newindex=function()return end})ai={processForward=function()if ah.f==0 then ah.y=ah.y+1 end;if ah.f==1 then ah.x=ah.x+1 end;if ah.f==2 then ah.y=ah.y-1 end;if ah.f==3 then ah.x=ah.x-1 end end,processDown=function()ah.z=ah.z-1 end,processUp=function()ah.z=ah.z+1 end,processRight=function()ah.f=(ah.f+1)%4 end,processLeft=function()ah.f=(ah.f-1)%4 end,cleanPosition=function()if ah.x~=0 or ah.y~=0 or ah.z~=0 or ah.f~=0 then return end;al.close()al=fs.open(ak,'w')end,readTasks=function()aj.info('Recovery.readTasks')if not fs.exists(am)then return{}end;local aa={}local a2=fs.open(am,'r')local s=a2.readLine()while s do if s=='end'then table.remove(aa)else table.insert(aa,s)end;s=a2.readLine()end;a2.close()return aa end,recoverPosition=function()aj.info('Recovery.recoverPosition')if not fs.exists(ak)then return end;local aw=fs.open(ak,'r')local ax=aw.readLine()while ax do if ax=='forward'then ai.processForward()end;if ax=='up'then ai.processUp()end;if ax=='down'then ai.processDown()end;if ax=='left'then ai.processLeft()end;if ax=='right'then ai.processRight()end;if ax:find('^location %d+ %d+ %d+ %d$')then local ay=ax:gmatch('%d+')ah.x=tonumber(ay())ah.y=tonumber(ay())ah.z=tonumber(ay())ah.f=tonumber(ay())end;ax=aw.readLine()end;aw.close()al=fs.open(ak,'w')al.writeLine('location '..ah.x..' '..ah.y..' '..ah.z..' '..ah.f)end,recoverTasks=function()aj.info('Recovery.recoverTasks')if not fs.exists(am)then return end;local aw=ai.readTasks()local a2=fs.open(am,'w')for _,az in ipairs(aw)do a2.writeLine(az)end;a2.close()for _,az in ipairs(aw)do ai.exec(az)end end,exec=function(ax)aj.info('Recovery.exec',ax)local aA=ax:gsub('[^%s]+')local f=aA()local aq=aA()local ay={}local H=aA()while H do if H:match('^%d+%.%d+$')or H:match('^%d+$')then H=tonumber(H)end;if H:upper()=='TRUE'then H=true end;if H:upper()=='FALSE'then H=false end;table.insert(ay,H)H=aA()end;local aB=b.import(f)local o=aB[aq]o(table.unpack(ay))end,digDetect=function(aC,aD)aj.info('Recovery.digDetect')return ai.retry(function()if not aD()then return true end;aC()return not aD()end,i.maxDigs)end,digMove=function(aD,aC,aE,aF)aj.info('Recovery.digMove')return ai.retry(function()if not ai.digDetect(aD,aC)then return false end;aE()return aF()end,i.maxAttacks)end,retry=function(aq,aG)aj.info('Recovery.retry')for aH=1,aG do if aq()then return true end end;return false end,navigateTo=function(aI,aJ,aK,aL,ar,as,at)aj.info('Recovery.navigateTo',aI,ar,as,at)ag.start('services/recovery',aI,ar,as,at)for z=1,3 do while ah.x<ar do ag.face(1)if not aJ()then break end end;while ah.x>ar do ag.face(3)if not aJ()then break end end;while ah.y<as do ag.face(0)if not aJ()then break end end;while ah.y>as do ag.face(2)if not aJ()then break end end;while ah.z<at do if not aK()then break end end;while ah.z>at do if not aL()then break end end end;ag.finish()return ah.x==ar and ah.y==as and ah.z==at end}return ag end);
b.export('plugins/excavate',function()local aM,ai;local j=b.import('services/io')local ag=b.import('services/recovery')local aN=b.import('ui/user-input')local i=b.import('services/config')local aj=b.import('services/logger')aM={start=function()aj.info('Excavate.start')local aO=ai.ask('How far forward should I dig?')if aO==nil then return end;local C=ai.ask('How far to the left should I dig?')if C==nil then return end;local aP=ai.ask('How far to the right should I dig?')if aP==nil then return end;local aQ=ai.ask('How far up should I dig?')if aQ==nil then return end;local aR=ai.ask('How far down should I dig?')if aR==nil then return end;ag.reset()aM.recover(aO,C,aP,aQ,aR)end,recover=function(aO,C,aP,aQ,aR,aS)aj.info('Excavate.recover',C,aP,aQ,aR,aS)aO=math.abs(aO)C=-math.abs(C)aP=math.abs(aP)aQ=math.abs(aQ)aR=-math.abs(aR)if not aS then if not ai.checkFuel(-C+aQ)then return false end;ag.start('plugins/excavate','recover',aO,-C,aP,aQ,-aR,true)ag.digTo(C,0,aQ-1)end;local function aT()local ao=ag.location.x<aP;local aU=ao and function()return ag.location.x>=aP end or function()return ag.location.x<=C end;repeat ai.showUpdate((aQ-ag.location.z)/(aQ-aR))if ao then ag.face(1)else ag.face(3)end;if not ag.excavateForward()then return false end until aU()return true end;local function aV()local ao=ag.location.y<aO;local aU=ao and function()return ag.location.y>=aO end or function()return ag.location.y<=0 end;repeat if not aT()then return false end;if ao then ag.face(0)else ag.face(2)end;if not ag.excavateForward()then return false end until aU()return true end;local function A()repeat if not aV()then return false end;for z=1,3 do if not ag.excavateDown()then return false end end until ag.location.z<aR-1;return true end;j.setCancelKey(keys.q,A)b.import('ui/views/notification').show('Coming Home!')ag.finish()ag.digTo(0,0,0)ai.unload()ag.reset()end,refuel=function(aW,ar,as,at,aS)aj.info('Excavate.refuel',aW,ar,as,at,aS)if not aS then ag.start('plugins/excavate','refuel',ar,as,at,aW,true)end;local aX=math.abs(ag.location.x)+math.abs(ag.location.y)+math.abs(ag.location.z)if turtle.getFuelLevel()<=aX and not ai.seekFuel(aX)then b.import('ui/dialog').show('I am out of fuel.\nPlease add fuel to\nmy inventory.')ag.finish()return false end;ag.digTo(0,0,0)while turtle.getFuelLevel()<aW and not ai.seekFuel(aW)do b.import('ui/dialog').show('Please add fuel to\nmy inventory and\npress any key')end;ag.digTo(ar,as,at)ag.finish()return true end,empty=function(ar,as,at,aS)aj.info('Excavate.empty',ar,as,at,aS)if not aS then ag.start('plugins/excavate','empty',ar,as,at,true)end;ag.digTo(0,0,0)ai.unload()ag.digTo(ar,as,at)ag.finish()end}ai={ask=function(aY)aj.info('Excavate.ask')local H=aN.show(aY..'\n(nothing to cancel)')while not H:find('^%d+$')do if H:len()==0 then return nil end;H=aN.show(aY..'\n(please enter positive a number)')end;return tonumber(H)end,showUpdate=function(aZ)local a_='Fuel: '..tostring(turtle.getFuelLevel())..'\n'..'Up/Down: '..tostring(ag.location.z)..'\n'..'Left/Right: '..tostring(ag.location.x)..'\n'..'Forward: '..tostring(ag.location.y)..'\n'..'--- Press Q To Quit ---'b.import('ui/views/progress').show(a_,aZ)end,checkFuel=function(aW)aj.info('Excavate.checkFuel',aW)if turtle.getFuelLevel()=='unlimited'then return true end;aW=aW or 0;aW=aW*2;aW=aW+math.abs(ag.location.x)aW=aW+math.abs(ag.location.y)aW=aW+math.abs(ag.location.z)if turtle.getFuelLevel()<aW and not ai.seekFuel(aW)then return aM.refuel(aW,ag.location.x,ag.location.y,ag.location.z)end;return true end,seekFuel=function(aW)aj.info('Excavate.seekFuel',aW)local b0=math.min(turtle.getFuelLimit(),aW+1000)for b1=1,16 do if turtle.getItemCount(b1)>0 then while turtle.getFuelLevel()<b0 and turtle.refuel(1)do end;if turtle.getFuelLevel()>=b0 then return true end end end;return false end,checkInventory=function()aj.info('Excavate.checkInventory')for z=1,2 do for b1=1,16 do if turtle.getItemCount(b1)==0 then return end end;ai.consolidate()end;aM.empty(ag.location.x,ag.location.y,ag.location.z)end,isFuelItem=function(b2)aj.info('Excavate.isFuelItem')if not b2 or not b2.id or not b2.id:find('^%d+')then return false end;local b3=tonumber(b2.id:match('^%d+'))for _,b4 in ipairs(i.fuelItems)do if b4==b3 then return true end end;return false end,unload=function()ag.face(2)for b1=1,16 do local b2=turtle.getItemDetail(b1)if b2 and not ai.isFuelItem(b2)then turtle.select(b1)repeat turtle.select(b1)until turtle.getItemCount()==0 or turtle.drop()end end;ag.face(0)ai.consolidate()end,consolidate=function()aj.info('Excavate.consolidate')for b5=2,16 do for b1=1,b5-1 do turtle.select(b5)if turtle.transferTo(b1)then break end end end end}return aM end).onready(function()b.import('services/plugins').register('Excavate',function()b.import('plugins/excavate').start()end)end);
b.export('plugins/update',function()local b6;b6={start=function()local i=b.import('services/config')local Y=shell.getRunningProgram()term.clear()term.setCursorPos(1,1)print('Downloading Latest Version...')os.sleep(1)fs.delete(Y)shell.run('pastebin','get',i.pastebin,Y)print('Rebooting...')os.sleep(5)os.reboot()end}return b6 end).onready(function()b.import('services/plugins').register('Update TurtleCraft',function()b.import('plugins/update').start()end,math.huge)end);
b.export('ui/dialog',function()local j=b.import('services/io')local b7=b.import('ui/views/notification')return{show=function(q)b7.show(q)j.readKey()end}end);
b.export('ui/user-input',function()local b7=b.import('ui/views/input')return{show=function(q)b7.show(q)return read()end}end);
b.export('ui/plugin-menu',function()local b8=b.import('ui/select')local a4=b.import('services/plugins')return{show=function(b9)local ba={title=b9 or'Exit'}local aa={}for _,bb in ipairs(a4.list())do table.insert(aa,bb)end;table.insert(aa,ba)repeat local bc=b8.show(aa,function(z)return z.title end)if type(bc.start)=='function'then bc.start()end until bc==ba end}end);
b.export('ui/select',function()local b7=b.import('ui/views/select')local j=b.import('services/io')return{show=function(aa,bd)local be=1;local bf={}for _,W in ipairs(aa)do local bg=bd and bd(W)or W;if type(bg)~='string'then error('Select items must be transformed to strings')end;table.insert(bf,bg)end;repeat b7.show(bf,be)local O=j.readKey()if O==keys.up then be=math.max(1,be-1)end;if O==keys.down then be=math.min(#bf,be+1)end until O==keys.enter or O==keys.numPadEnter;return aa[be]end}end);
b.export('ui/views/border',function()local i=b.import('services/config')local j=b.import('services/io')return{show=function()local bh,bi=term.getSize()j.centerLine('TurtleCraft v'..i.version..' '..i.env,'=',1)for bj=2,bi do term.setCursorPos(1,bj)term.write('|')term.setCursorPos(bh,bj)term.write('|')end;term.setCursorPos(1,bi)term.write(('='):rep(bh))end}end);
b.export('ui/views/input',function()local j=b.import('services/io')local bk=b.import('ui/views/border')return{show=function(q)term.clear()local bh,bi=term.getSize()local bl=j.wordWrap(q,bh-4)j.writeBlock(bl,3,3)term.setCursorPos(1,bi-2)term.clearLine()term.setCursorPos(1,bi-1)term.clearLine()bk.show()term.setCursorPos(3,bi-2)end}end);
b.export('ui/views/notification',function()local bk=b.import('ui/views/border')local j=b.import('services/io')return{show=function(a_)term.clear()j.centerPage(a_)bk.show()end}end);
b.export('ui/views/progress',function()local j=b.import('services/io')local bk=b.import('ui/views/border')return{show=function(q,aZ)term.clear()local bh,bi=term.getSize()local _,bl=j.wordWrap(q,bh-4)local y=math.floor(bi/2-#bl/2)for s=1,#bl do term.setCursorPos(3,s+y)term.write(bl[s])end;term.setCursorPos(3,y+#bl+1)local bm=math.floor(math.min(bh-4,math.max(0,(bh-4)*aZ)))term.write(('>'):rep(bm))bk.show()term.setCursorPos(1,1)end}end);
b.export('ui/views/select',function()local j=b.import('services/io')local bk=b.import('ui/views/border')return{show=function(aa,be)local bh,bi=term.getSize()bh=bh-2;bi=bi-3;local bn=math.max(1,be-math.ceil(bi/2))bn=math.min(#aa-bi,bn)bn=math.max(1,bn)local w=math.min(#aa-bn,bi)term.clear()for s=2,w+2 do term.setCursorPos(2,s)local bo=bn+s-2;local bb=aa[bo]if bo==be then term.write('>')else term.write(' ')end;term.write(bb)end;bk.show()j.centerLine('-use up/down/enter-',nil,bi+3)end}end);
(function()if os.getComputerLabel()==nil then os.setComputerLabel('TurtleCraft')end;b.start()b.import('services/recovery').recover()b.import('ui/plugin-menu').show('Exit TurtleCraft')term.clear()term.setCursorPos(1,1)print('TurtleCraft exited')end)();

local a="{\"minify\":true,\"maxDigs\":300,\"maxMoves\":10,\"maxAttacks\":64,\"recoveryPath\":\"turtlecraft/recovery/\",\"version\":\"2.0.0\",\"pastebin\":\"nTNP03Bw\",\"logsPath\":\"turtlecraft/logs/\",\"logsLevel\":1,\"fuelItems\":[17,162,263,327,369],\"build\":\"1509505457381\",\"env\":\"test\"}"local b={}print((function()local c={}local d={}b.export=function(e,f)if c[e]~=nil then error('module '..e..' exists')end;local g=type(f)~='function'c[e]={resolved=g,value=f}return{onready=function(h)if type(h)~='function'then error('callback must be a function')end;table.insert(d,h)end}end;b.import=function(e)if not c[e]then error('module '..e..' does not exist.')end;if not c[e].resolved then c[e].value=c[e].value()c[e].resolved=true end;return c[e].value end;b.start=function()if d==false then error('TurtleCraft started twice!')end;for _,h in ipairs(d)do h()end;d=false end end)());
b.export('plugins/excavate',function()local i,j;local k=b.import('services/io')local l=b.import('services/recovery')local m=b.import('ui/user-input')local n=b.import('services/config')local o=b.import('services/logger')i={start=function()o.info('Excavate.start')local p=j.ask('How far forward should I dig?')if p==nil then return end;local q=j.ask('How far to the left should I dig?')if q==nil then return end;local r=j.ask('How far to the right should I dig?')if r==nil then return end;local s=j.ask('How far up should I dig?')if s==nil then return end;local t=j.ask('How far down should I dig?')if t==nil then return end;l.reset()i.recover(p,q,r,s,t)end,recover=function(p,q,r,s,t,u)o.info('Excavate.recover',q,r,s,t,u)p=math.abs(p)q=-math.abs(q)r=math.abs(r)s=math.abs(s)t=-math.abs(t)if not u then if not j.checkFuel(-q+s)then return false end;l.start('plugins/excavate','recover',p,-q,r,s,-t,true)l.digTo(q,0,s-1)end;local function v()local w=l.location.x<r;local x=w and function()return l.location.x>=r end or function()return l.location.x<=q end;repeat j.showUpdate((s-l.location.z)/(s-t))if w then l.face(1)else l.face(3)end;if not l.excavateForward()then return false end;if j.checkFuel(4)==false then return false end;j.checkInventory()until x()return true end;local function y()local w=l.location.y<p;local x=w and function()return l.location.y>=p end or function()return l.location.y<=0 end;repeat if not v()then return false end;if w then l.face(0)else l.face(2)end;if not l.excavateForward()then return false end until x()return true end;local function z()repeat if not y()then return false end;for A=1,3 do if not l.excavateDown()then return false end end until l.location.z<t-1;return true end;k.setCancelKey(keys.q,z)b.import('ui/views/notification').show('Coming Home!')l.finish()l.digTo(0,0,0)j.unload()l.reset()end,refuel=function(B,C,D,E,u)o.info('Excavate.refuel',B,C,D,E,u)if not u then l.start('plugins/excavate','refuel',C,D,E,B,true)end;local F=math.abs(l.location.x)+math.abs(l.location.y)+math.abs(l.location.z)if turtle.getFuelLevel()>F then l.digTo(0,0,0)end;while turtle.getFuelLevel()<B and not j.seekFuel(B)do b.import('ui/dialog').show('Please add fuel to\nmy inventory and\npress any key')end;l.digTo(C,D,E)l.finish()return true end,empty=function(C,D,E,u)o.info('Excavate.empty',C,D,E,u)if not u then l.start('plugins/excavate','empty',C,D,E,true)end;l.digTo(0,0,0)j.unload()l.digTo(C,D,E)l.finish()end}j={ask=function(G)o.info('Excavate.ask')local H=m.show(G..'\n(nothing to cancel)')while not H:find('^%d+$')do if H:len()==0 then return nil end;H=m.show(G..'\n(please enter positive a number)')end;return tonumber(H)end,showUpdate=function(I)local J='Fuel: '..tostring(turtle.getFuelLevel())..'\n'..'Up/Down: '..tostring(l.location.z)..'\n'..'Left/Right: '..tostring(l.location.x)..'\n'..'Forward: '..tostring(l.location.y)..'\n'..'--- Press Q To Quit ---'b.import('ui/views/progress').show(J,I)end,checkFuel=function(B)o.info('Excavate.checkFuel',B)if turtle.getFuelLevel()=='unlimited'then return true end;B=B or 0;B=B*2;B=B+math.abs(l.location.x)B=B+math.abs(l.location.y)B=B+math.abs(l.location.z)if turtle.getFuelLevel()<=B and not j.seekFuel(B)then return i.refuel(B,l.location.x,l.location.y,l.location.z)end;return true end,seekFuel=function(B)o.info('Excavate.seekFuel',B)local K=math.min(turtle.getFuelLimit(),B+1000)for L=1,16 do if turtle.getItemCount(L)>0 then turtle.select(L)while turtle.getFuelLevel()<K and turtle.refuel(1)do end;if turtle.getFuelLevel()>=K then return true end end end;return false end,checkInventory=function()o.info('Excavate.checkInventory')for A=1,2 do for L=1,16 do if turtle.getItemCount(L)==0 then return end end;j.consolidate()end;i.empty(l.location.x,l.location.y,l.location.z)end,isFuelItem=function(M)o.info('Excavate.isFuelItem')if not M or not M.id or not M.id:find('^%d+')then return false end;local N=tonumber(M.id:match('^%d+'))for _,O in ipairs(n.fuelItems)do if O==N then return true end end;return false end,unload=function()l.face(2)for L=1,16 do local M=turtle.getItemDetail(L)if M and not j.isFuelItem(M)then turtle.select(L)repeat turtle.select(L)until turtle.getItemCount()==0 or turtle.drop()end end;l.face(0)j.consolidate()end,consolidate=function()o.info('Excavate.consolidate')for P=2,16 do for L=1,P-1 do turtle.select(P)if turtle.transferTo(L)then break end end end end}return i end).onready(function()b.import('services/plugins').register('Excavate',function()b.import('plugins/excavate').start()end)end);
b.export('plugins/update',function()local Q;Q={start=function()local n=b.import('services/config')local R=shell.getRunningProgram()term.clear()term.setCursorPos(1,1)print('Downloading Latest Version...')os.sleep(1)fs.delete(R)shell.run('pastebin','get',n.pastebin,R)print('Rebooting...')os.sleep(5)os.reboot()end}return Q end).onready(function()b.import('services/plugins').register('Update TurtleCraft',function()b.import('plugins/update').start()end,math.huge)end);
b.export('services/config',function()local n=b.import('services/json').parse(a or'{}')n.recoveryPath=n.recoveryPath:gsub('[%s/]+$','')n.logsPath=n.logsPath:gsub('[%s/]+$','')return n end);
b.export('services/io',function()local k;k={readKey=function(S)if S then os.startTimer(S)end;local T,U,V;repeat T,U,V=os.pullEvent()until T=="key"or T=="timer"if T=="timer"then return false,false end;return U,V end,setCancelKey=function(U,W)parallel.waitForAny(W,function()repeat local _,X=os.pullEvent('key')until X==U end)end,centerLine=function(Y,Z,a0)if a0==nil then _,a0=term.getCursorPos()end;local a1=term.getSize()local a2=math.ceil(a1/2-Y:len()/2)+1;if a2<0 then term.setCursorPos(1,a0)term.write(Y:sub(math.abs(a2)+1,a2-1))return end;if Z~=nil then term.setCursorPos(1,a0)term.write(Z:rep(a1))end;term.setCursorPos(a2,a0)term.write(Y)end,centerPage=function(Y,Z)local a3={}for a0 in Y:gmatch('[^\n]+')do table.insert(a3,a0)end;local a4=#a3;local _,a5=term.getSize()local a6=math.floor(a5/2-a4/2)for A=1,a4 do k.centerLine(a3[A],Z,a6+A)end end,wordWrap=function(Y,a1)local a3={}local a0=''for z in Y:gmatch('[^\n]*\n?')do z=z:gsub('\n','')for a7 in z:gmatch('[^%s]+%s*')do if(a0 ..a7):len()>a1 then table.insert(a3,a0)a0=''end;a0=a0 ..a7 end;if a0:len()>0 or z:len()==0 then table.insert(a3,a0)a0=''end end;return table.concat(a3,'\n'),a3 end,writeBlock=function(Y,q,a8)for a0 in Y:gmatch('[^\n]*\n?')do term.setCursorPos(q,a8)term.write(a0)a8=a8+1 end end}return k end);
b.export('services/json',function()local a9;a9={trim=function(aa)return aa:gsub('^%s+',''):gsub('%s+$','')end,parseNull=function(aa)if not aa:lower():find('^%s*null')then return false,nil,aa end;local ab=aa:gsub('^%s*null','')return true,nil,ab end,parseNumber=function(aa)if not aa:find('^%s*-?%d+')then return false,nil,aa end;local ab=a9.trim(aa)local H=ab:match('^-?%d+')or ab:match('^-?%d+%.%d+')ab=ab:sub(H:len()+1)return true,tonumber(H),ab end,parseBoolean=function(aa)local ab=a9.trim(aa)local H=ab:lower():match('^true')or ab:lower():match('^false')if H==nil then return false,nil,ab end;ab=ab:sub(H:len()+1)return true,H=='true',ab end,parseString=function(aa)if not aa:find('^%s*"')then return false,nil,aa end;local ab=aa:gsub('^%s*"','')local H=''local ac=ab:match('^[^\\"]*[\\"]')while ac~=nil do ab=ab:sub(ac:len()+1)if ac:sub(-1)=='"'then H=H..ac:sub(1,-2)return true,H,ab end;H=H..ac:sub(1,-2)local ad=ab:sub(1,1)ab=ab:sub(2)if ad=='"'then H=H..'"'end;if ad=='\\'then H=H..'\\'end;if ad=='/'then H=H..'/'end;if ad=='b'then H=H..'\b'end;if ad=='f'then H=H..'\f'end;if ad=='n'then H=H..'\n'end;if ad=='r'then H=H..'\r'end;if ad=='t'then H=H..'\t'end;if ad=='u'then local ae=tonumber(ab:sub(1,4),16)%256;ab=ab:sub(5)H=H..string.char(ae)end;ac=ab:match('[^\\"]*[\\"]')end;return false,ab:len()end,parseArray=function(aa)if not aa:find('^%s*%[')then return false,nil,aa end;local af={}local ag,H,ab=a9.parseNext(aa:gsub('^%s*%[',''))while ag do table.insert(af,H)ab=a9.trim(ab)local ah=ab:sub(1,1)ab=ab:sub(2)if ah==']'then return true,af,ab end;if ah~=','then return false,ab:len()end;ag,H,ab=a9.parseNext(ab)end;return false,ab:len()end,parseObject=function(aa)if not aa:find('^%s*%{')then return false,nil,aa end;local af={}local ag,key,ab=a9.parseString(aa:gsub('^%s*%{',''))while ag do ab=a9.trim(ab)if ab:sub(1,1)~=':'then return false,ab:len()end;ab=ab:sub(2)local ai,H,aj=a9.parseNext(ab)ab=aj;if not ai then return false end;af[key]=H;ab=a9.trim(ab)local ah=ab:sub(1,1)ab=ab:sub(2)if ah=='}'then return true,af,ab end;if ah~=','then return false,ab:len()end;ag,key,ab=a9.parseString(ab)end;return false,ab:len()end,parseNext=function(aa)for A,ak in ipairs({a9.parseNull,a9.parseNumber,a9.parseBoolean,a9.parseString,a9.parseArray,a9.parseObject})do local al,H,ab=ak(aa)if al then return true,H,ab end end;return false,aa:len()end,parse=function(aa)local al,H=a9.parseNext(aa)if al then return H else return nil end end,format=function(H)if type(H)=='nil'then return'null'end;if type(H)=='boolean'then return tostring(H)end;if type(H)=='number'then return tostring(H)end;if type(H)=='string'then H=H:gsub('\\','\\\\')H=H:gsub('\"','\\"')H=H:gsub('\/','\\/')H=H:gsub('\b','\\b')H=H:gsub('\f','\\f')H=H:gsub('\n','\\n')H=H:gsub('\r','\\r')H=H:gsub('\t','\\t')return'"'..H..'"'end;if type(H)=='table'and#H>0 then local am={}for A,aa in ipairs(H)do table.insert(am,a9.format(aa))end;return'['..table.concat(am,',')..']'end;if type(H)=='table'then local an={}for ao,ap in pairs(H)do table.insert(an,'"'..ao..'":'..a9.format(ap))end;return'{'..table.concat(an,',')..'}'end end}return a9 end);
b.export('services/logger',function()local n=b.import('services/config')fs.delete(n.logsPath)local function aq(R,ar,...)local as=table.pack(...)for A,ap in ipairs(as)do as[A]=tostring(ap)end;xpcall(function()if n.logsLevel>ar then return end;R=R or'general.log'R=n.logsPath..'/'..R:gsub('^[%s/]+','')local at=tostring(os.time())..'::'..table.concat(as,',')local au=fs.open(R,'a')au.writeLine(at)au.close()end,function(av)print('logger failed')print(av)end)end;return{to=function(R)return{info=function(...)aq(R,0,...)end,warn=function(...)aq(R,1,...)end,error=function(...)aq(R,2,...)end}end,info=function(...)aq(nil,0,...)end,warn=function(...)aq(nil,1,...)end,error=function(...)aq(nil,2,...)end}end);
b.export('services/plugins',function()local aw,ax,ay;aw={list=function()local az=ay(ax,function(aA)return aA.order end,function(aB)return ay(aB,function(A)return A.title end)end)local aC={}for _,ap in ipairs(az)do table.insert(aC,{title=ap.title,start=ap.start})end;return aC end,register=function(aD,a6,aE)local aF='Usage: TurtleCraft.import("services/plugins").register(<title>, <start function>, <optional order>);'if type(a6)~='function'then error(aF)end;if type(aD)~='string'then error(usages)end;if aE~=nil and type(aE)~='number'then error(aF)end;aD=aD:gsub('^%s+',''):gsub('%s+$','')aE=aE or 0;for _,ap in ipairs(ax)do if aD:lower()==ap.title:lower()then error('Plugin "'..aD..'" already registered!')end end;table.insert(ax,{title=aD,start=a6,order=aE})end}ax={}ay=function(am,aG,aH)local aB={}for _,ap in ipairs(am)do local key=aG(ap)if aB[key]==nil then aB[key]={}end;table.insert(aB[key],ap)end;local az={}for ao in pairs(aB)do table.insert(az,ao)end;table.sort(az)local af={}for _,ao in ipairs(az)do if aH and#aB[ao]>0 then aB[ao]=aH(aB[ao])end;for _,ap in ipairs(aB[ao])do table.insert(af,ap)end end;return af end;return aw end);
b.export('services/recovery',function()local l,aI,j;local n=b.import('services/config')local o=b.import('services/logger')local k=b.import('services/io')local aJ=n.recoveryPath..'/position.dat'local aK=fs.open(aJ,'a')local aL=n.recoveryPath..'/tasks.dat'local aM={}l={location={},face=function(w)o.info('Recovery.face',w)local aN=w%4-aI.f;if aN==0 then return true end;if aN>2 then aN=-1 end;if aN<-2 then aN=1 end;local aO=aN>0 and turtle.turnRight or turtle.turnLeft;local e=aN>0 and'right'or'left'for A=1,math.abs(aN)do aO()aK.writeLine(e)aK.flush()j.cleanPosition()end;aI.f=(aI.f+aN)%4;return true end,moveTo=function(C,D,E)return j.navigateTo('moveTo',l.moveForward,l.moveUp,l.moveDown,C,D,E)end,moveForward=function()o.info('Recovery.moveForward')return j.retry(function()if turtle.forward()then aK.writeLine('forward')aK.flush()j.cleanPosition()j.processForward()return true end;return false end,n.maxMoves)end,moveUp=function()o.info('Recovery.moveUp')return j.retry(function()if turtle.up()then aK.writeLine('up')aK.flush()j.cleanPosition()j.processUp()return true end;return false end,n.maxMoves)end,moveDown=function()o.info('Recovery.moveDown')return j.retry(function()if turtle.down()then aK.writeLine('down')aK.flush()j.cleanPosition()j.processDown()return true end;return false end,n.maxMoves)end,digTo=function(C,D,E)return j.navigateTo('digTo',l.digForward,l.digUp,l.digDown,C,D,E)end,digForward=function()o.info('Recovery.digForward')return j.digMove(turtle.detect,turtle.dig,turtle.attack,function()if turtle.forward()then aK.writeLine('forward')aK.flush()j.cleanPosition()j.processForward()return true end;return false end)end,digUp=function()o.info('Recovery.digUp')return j.digMove(turtle.detectUp,turtle.digUp,turtle.attackUp,function()if turtle.up()then aK.writeLine('up')aK.flush()j.cleanPosition()j.processUp()return true end;return false end)end,digDown=function()o.info('Recovery.digDown')return j.digMove(turtle.detectDown,turtle.digDown,turtle.attackDown,function()if turtle.down()then aK.writeLine('down')aK.flush()j.cleanPosition()j.processDown()return true end;return false end)end,excavateTo=function(C,D,E)return j.navigateTo('excavateTo',l.excavateForward,l.excavateUp,l.excavateDown,C,D,E)end,excavateForward=function()o.info('Recovery.excavateForward')j.digDetect(turtle.detectUp,turtle.digUp)j.digDetect(turtle.detectDown,turtle.digDown)return l.digForward()end,excavateUp=function()o.info('Recovery.excavateUp')j.digDetect(turtle.detect,turtle.dig)return l.digUp()end,excavateDown=function()o.info('Recovery.excavateDown')j.digDetect(turtle.detect,turtle.dig)return l.digDown()end,start=function(...)o.info('Recovery.start')local as=table.pack(...)for A,ap in ipairs(as)do as[A]=tostring(ap)end;local aP=table.concat(as,' ')local au=fs.open(aL,'a')au.writeLine(aP)au.close()table.insert(aM,aP)end,finish=function()o.info('Recovery.finish')local au=fs.open(aL,'a')au.writeLine('end')au.close()table.remove(aM)local ab=j.readTasks()if#ab==0 then fs.open(aL,'w').close()local aQ='location '..aI.x..' '..aI.y..' '..aI.z..' '..aI.f;aK.close()aK=fs.open(aJ,'w')aK.writeLine(aQ)end end,recover=function()o.info('Recovery.recover')j.recoverPosition()if#j.readTasks()==0 then return end;repeat b.import('ui/views/notification').show('Recovering...\nPress Q to cancel')local key=k.readKey(60)until key==false or key==keys.q;if key==false then b.import('ui/views/notification').show('Recovering\nLast Session')j.recoverTasks()end;l.reset()end,reset=function()o.info('Recovery.reset')fs.open(aL,'w')aM={}aK=fs.open(aJ,'w')aI.x=0;aI.y=0;aI.z=0;aI.f=0 end}aI={x=0,y=0,z=0,f=0}setmetatable(l.location,{__index=aI,__newindex=function()return end})j={processForward=function()if aI.f==0 then aI.y=aI.y+1 end;if aI.f==1 then aI.x=aI.x+1 end;if aI.f==2 then aI.y=aI.y-1 end;if aI.f==3 then aI.x=aI.x-1 end end,processDown=function()aI.z=aI.z-1 end,processUp=function()aI.z=aI.z+1 end,processRight=function()aI.f=(aI.f+1)%4 end,processLeft=function()aI.f=(aI.f-1)%4 end,cleanPosition=function()if aI.x~=0 or aI.y~=0 or aI.z~=0 or aI.f~=0 then return end;aK.close()aK=fs.open(aJ,'w')end,readTasks=function()o.info('Recovery.readTasks')if not fs.exists(aL)then return{}end;local aC={}local au=fs.open(aL,'r')local a0=au.readLine()while a0 do if a0=='end'then table.remove(aC)else table.insert(aC,a0)end;a0=au.readLine()end;au.close()return aC end,recoverPosition=function()o.info('Recovery.recoverPosition')if not fs.exists(aJ)then return end;local aR=fs.open(aJ,'r')local aS=aR.readLine()while aS do if aS=='forward'then j.processForward()end;if aS=='up'then j.processUp()end;if aS=='down'then j.processDown()end;if aS=='left'then j.processLeft()end;if aS=='right'then j.processRight()end;if aS:find('^location %d+ %d+ %d+ %d$')then local aT=aS:gmatch('%d+')aI.x=tonumber(aT())aI.y=tonumber(aT())aI.z=tonumber(aT())aI.f=tonumber(aT())end;aS=aR.readLine()end;aR.close()aK=fs.open(aJ,'w')aK.writeLine('location '..aI.x..' '..aI.y..' '..aI.z..' '..aI.f)end,recoverTasks=function()o.info('Recovery.recoverTasks')if not fs.exists(aL)then return end;local aR=j.readTasks()local au=fs.open(aL,'w')for _,aU in ipairs(aR)do au.writeLine(aU)end;au.close()for _,aU in ipairs(aR)do j.exec(aU)end end,exec=function(aS)o.info('Recovery.exec',aS)local aV=aS:gmatch('[^%s]+')local f=aV()local aO=aV()local aT={}local H=aV()while H do if H:match('^%d+%.%d+$')or H:match('^%d+$')then H=tonumber(H)elseif H:upper()=='TRUE'then H=true elseif H:upper()=='FALSE'then H=false end;table.insert(aT,H)H=aV()end;local aW=b.import(f)local W=aW[aO]W(table.unpack(aT))end,digDetect=function(aX,aY)o.info('Recovery.digDetect')return j.retry(function()if not aY()then return true end;aX()return not aY()end,n.maxDigs)end,digMove=function(aY,aX,aZ,a_)o.info('Recovery.digMove')return j.retry(function()if not j.digDetect(aY,aX)then return false end;aZ()return a_()end,n.maxAttacks)end,retry=function(aO,b0)o.info('Recovery.retry')for b1=1,b0 do if aO()then return true end end;return false end,navigateTo=function(b2,b3,b4,b5,C,D,E)o.info('Recovery.navigateTo',b2,C,D,E)l.start('services/recovery',b2,C,D,E)for A=1,3 do while aI.x<C do l.face(1)if not b3()then break end end;while aI.x>C do l.face(3)if not b3()then break end end;while aI.y<D do l.face(0)if not b3()then break end end;while aI.y>D do l.face(2)if not b3()then break end end;while aI.z<E do if not b4()then break end end;while aI.z>E do if not b5()then break end end end;l.finish()return aI.x==C and aI.y==D and aI.z==E end}return l end);
b.export('ui/dialog',function()local k=b.import('services/io')local b6=b.import('ui/views/notification')return{show=function(Y)b6.show(Y)k.readKey()end}end);
b.export('ui/user-input',function()local b6=b.import('ui/views/input')return{show=function(Y)b6.show(Y)return read()end}end);
b.export('ui/plugin-menu',function()local b7=b.import('ui/select')local aw=b.import('services/plugins')return{show=function(b8)local b9={title=b8 or'Exit'}local aC={}for _,ba in ipairs(aw.list())do table.insert(aC,ba)end;table.insert(aC,b9)repeat local bb=b7.show(aC,function(A)return A.title end)if type(bb.start)=='function'then bb.start()end until bb==b9 end}end);
b.export('ui/select',function()local b6=b.import('ui/views/select')local k=b.import('services/io')return{show=function(aC,bc)local bd=1;local be={}for _,ap in ipairs(aC)do local bf=bc and bc(ap)or ap;if type(bf)~='string'then error('Select items must be transformed to strings')end;table.insert(be,bf)end;repeat b6.show(be,bd)local key=k.readKey()if key==keys.up then bd=math.max(1,bd-1)end;if key==keys.down then bd=math.min(#be,bd+1)end until key==keys.enter or key==keys.numPadEnter;return aC[bd]end}end);
b.export('ui/views/border',function()local n=b.import('services/config')local k=b.import('services/io')return{show=function()local bg,bh=term.getSize()k.centerLine('TurtleCraft v'..n.version..' '..n.env,'=',1)for bi=2,bh do term.setCursorPos(1,bi)term.write('|')term.setCursorPos(bg,bi)term.write('|')end;term.setCursorPos(1,bh)term.write(('='):rep(bg))end}end);
b.export('ui/views/input',function()local k=b.import('services/io')local bj=b.import('ui/views/border')return{show=function(Y)term.clear()local bg,bh=term.getSize()local bk=k.wordWrap(Y,bg-4)k.writeBlock(bk,3,3)term.setCursorPos(1,bh-2)term.clearLine()term.setCursorPos(1,bh-1)term.clearLine()bj.show()term.setCursorPos(3,bh-2)end}end);
b.export('ui/views/notification',function()local bj=b.import('ui/views/border')local k=b.import('services/io')return{show=function(J)term.clear()k.centerPage(J)bj.show()end}end);
b.export('ui/views/progress',function()local k=b.import('services/io')local bj=b.import('ui/views/border')return{show=function(Y,I)term.clear()local bg,bh=term.getSize()local _,bk=k.wordWrap(Y,bg-4)local a6=math.floor(bh/2-#bk/2)for a0=1,#bk do term.setCursorPos(3,a0+a6)term.write(bk[a0])end;term.setCursorPos(3,a6+#bk+1)local bl=math.floor(math.min(bg-4,math.max(0,(bg-4)*I)))term.write(('>'):rep(bl))bj.show()term.setCursorPos(1,1)end}end);
b.export('ui/views/select',function()local k=b.import('services/io')local bj=b.import('ui/views/border')return{show=function(aC,bd)local bg,bh=term.getSize()bg=bg-2;bh=bh-3;local bm=math.max(1,bd-math.ceil(bh/2))bm=math.min(#aC-bh,bm)bm=math.max(1,bm)local a4=math.min(#aC-bm,bh)term.clear()for a0=2,a4+2 do term.setCursorPos(2,a0)local bn=bm+a0-2;local ba=aC[bn]if bn==bd then term.write('>')else term.write(' ')end;term.write(ba)end;bj.show()k.centerLine('-use up/down/enter-',nil,bh+3)end}end);
(function()if os.getComputerLabel()==nil then os.setComputerLabel('TurtleCraft')end;b.start()b.import('services/recovery').recover()b.import('ui/plugin-menu').show('Exit TurtleCraft')term.clear()term.setCursorPos(1,1)print('TurtleCraft exited')end)();

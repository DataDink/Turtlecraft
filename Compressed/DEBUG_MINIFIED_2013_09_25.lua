--global.lua
if turtlecraft~=nil then error("A conflicting version of turtle craft exists or another script has registered 'turtlecraft'")print("global.lua 2")end;turtlecraft={}print("global.lua 5")turtlecraft.version=0.01;print("global.lua 6")turtlecraft.directory="turtlecraft_data/"print("global.lua 7")if not fs.exists("turtlecraft_data")then fs.makeDir("turtlecraft_data")end
--utility.lua
turtlecraft.input={}print("utility.lua 1")turtlecraft.input.readKey=function(a)if a~=nil then os.startTimer(a)end;local b=""local c=0;print("utility.lua 4")repeat b,c=os.pullEvent()until b=="key"or b=="timer"print("utility.lua 5")if b=="timer"then return nil end;return c end;turtlecraft.input.escapeOnKey=function(d,e)local f=function()while true do local b,c=os.pullEvent("key")print("utility.lua 12")if c==d then return end end end;parallel.waitForAny(f,e)print("utility.lua 16")end;turtlecraft.term={}print("utility.lua 19")turtlecraft.term.write=function(g,h,i)term.setCursorPos(g,h)print("utility.lua 21")term.clearLine()print("utility.lua 22")term.write(i)print("utility.lua 23")end;turtlecraft.term.clear=function(j,k)term.clear()print("utility.lua 26")local l,m=term.getSize()print("utility.lua 27")local n="Turtlecraft v"..turtlecraft.version;print("utility.lua 28")if j~=nil then n=n.." - "..j end;turtlecraft.term.write(1,1,n)print("utility.lua 30")local o=""print("utility.lua 31")for p=1,l do o=o.."="print("utility.lua 33")end;turtlecraft.term.write(1,2,o)print("utility.lua 35")if k~=nil then turtlecraft.term.write(1,m,k)print("utility.lua 37")end end;turtlecraft.term.scrolled=function(g,h,q,i)local r,m=term.getSize()print("utility.lua 41")local s=math.max(0,q-m+1)print("utility.lua 42")local t=m-5;print("utility.lua 43")local u=3;print("utility.lua 44")local v=h-s;print("utility.lua 45")if v<1 or v>t then return end;turtlecraft.term.write(1,v+u,i)print("utility.lua 47")end;turtlecraft.term.notifyResume=function(w)if w==nil then w="previous function"end;turtlecraft.term.clear()print("utility.lua 51")turtlecraft.term.write(1,4,"Resuming: "..w)print("utility.lua 52")turtlecraft.term.write(1,5,"in 15 seconds.")print("utility.lua 53")turtlecraft.term.write(1,6,"Press any key to cancel.")print("utility.lua 54")local c=turtlecraft.input.readKey(15)print("utility.lua 55")turtlecraft.term.clear()print("utility.lua 56")return c==nil end
--position.lua
turtlecraft.position={}print("position.lua 3")turtlecraft.scope=function()local directions={north=270,south=90,west=180,east=0,up='up',down='down'}print("position.lua 14")turtlecraft.position.directions=directions;print("position.lua 15")local facings={}facings[0]=directions.south;print("position.lua 18")facings[1]=directions.west;print("position.lua 19")facings[2]=directions.north;print("position.lua 20")facings[3]=directions.east;print("position.lua 21")turtlecraft.position.facings=facings;print("position.lua 22")local a={x=0,y=0,z=0,d=directions.north}print("position.lua 29")local b={positionConfirmed=false,directionConfirmed=false,canSync=false,inSync=false}print("position.lua 36")local c={path=turtlecraft.directory.."position.data"}print("position.lua 40")c.read=function()local e={x=a.x,y=a.y,z=a.z,d=a.d,positionConfirmed=false,directionConfirmed=false}print("position.lua 47")if not fs.exists(c.path)then return e end;local f=fs.open(c.path,"r")print("position.lua 49")if f==nil then return e end;local g=f.readLine()print("position.lua 52")local h=f.readLine()print("position.lua 53")f.close()print("position.lua 54")if g==nil then return e end;local i=string.gmatch(g,"[^,]+")print("position.lua 57")local j={x=tonumber(i()),y=tonumber(i()),z=tonumber(i()),d=tonumber(i()),positionConfirmed=false,directionConfirmed=false}print("position.lua 65")local k=tonumber(i())print("position.lua 66")if h==nil then j.positionConfirmed=true;print("position.lua 69")j.directionConfirmed=true;print("position.lua 70")return j end;i=string.gmatch(h,"[^,]+")print("position.lua 74")local l={x=tonumber(i()),y=tonumber(i()),z=tonumber(i()),d=tonumber(i())}print("position.lua 80")if k>turtle.getFuelLevel()then j.positionConfirmed=true;print("position.lua 83")j.directionConfirmed=true;print("position.lua 84")elseif k==turtle.getFuelLevel()then j.x=l.x;print("position.lua 86")j.y=l.y;print("position.lua 87")j.z=l.z;print("position.lua 88")j.positionConfirmed=true;print("position.lua 89")j.directionConfirmed=j.d==l.d;print("position.lua 90")end;return j end;c.write=function(j,l)local f=fs.open(c.path,"w")print("position.lua 96")if f==nil then return false end;f.writeLine(j.x..","..j.y..","..j.z..","..j.d..","..turtle.getFuelLevel())print("position.lua 98")if l~=nil then f.writeLine(l.x..","..l.y..","..l.z..","..l.d)print("position.lua 100")end;f.close()print("position.lua 102")return true end;b.getPeripheral=function(m)local n=peripheral.getNames()print("position.lua 107")for o,p in pairs(n)do if peripheral.getType(p)==m then local q=peripheral.wrap(p)print("position.lua 110")return q end end;return nil end;b.tryUpdateCustom=function()return false end;b.tryReadGps=function()local r=""print("position.lua 124")if peripheral.getType("right")=="modem"then r="right"end;if peripheral.getType("left")=="modem"then r="left"end;if r==""then return nil end;rednet.open(r)print("position.lua 129")if not rednet.isOpen(r)then return nil end;local x,z,y=gps.locate(10)return x,y,z end;b.tryUpdateGps=function()local x,y,z=b.tryReadGps()print("position.lua 137")if x==nil then return false end;a.x=x;print("position.lua 139")a.y=y;print("position.lua 140")a.z=z;print("position.lua 141")b.positionConfirmed=true;print("position.lua 142")b.canSync=true;print("position.lua 143")return true end;b.tryUpdateCompass=function()local s=b.getPeripheral("compass")print("position.lua 148")if s==nil or s.getFacing==nil then return false end;a.d=facings[s.getFacing()]print("position.lua 150")b.directionConfirmed=true;print("position.lua 151")return true end;b.trySync=function()if b.directionConfirmed and b.positionConfirmed then return true end;if not b.canSync then return false end;for t=1,4 do if not turtle.detect()then break end;a.d=(a.d+90)%360;print("position.lua 161")turtle.turnRight()print("position.lua 162")end;if turtle.detect()then return false end;turtle.forward()print("position.lua 166")local x=a.x;print("position.lua 168")local y=a.y;print("position.lua 169")local z=a.z;print("position.lua 170")local d=a.d;print("position.lua 171")if d==directions.north then y=y+1 end;if d==directions.south then y=y-1 end;if d==directions.east then x=x+1 end;if d==directions.west then x=x-1 end;local u,v,w=b.tryReadGps()print("position.lua 178")if d==directions.north and u<x then d=directions.west end;if d==directions.south and u<x then d=directions.west end;if d==directions.east and u<x and v==y then d=directions.west end;if d==directions.north and u>x then d=directions.east end;if d==directions.south and u>x then d=directions.east end;if d==directions.west and u>x and v==y then d=directions.east end;if d==directions.north and v<y and u==x then d=directions.south end;if d==directions.west and v<y then d=directions.south end;if d==directions.east and v<y then d=directions.south end;if d==directions.south and v>y and u==x then d=directions.north end;if d==directions.west and v>y then d=directions.north end;if d==directions.east and v>y then d=directions.north end;turtle.back()print("position.lua 193")a.d=d;print("position.lua 194")c.write(a)print("position.lua 195")return true end;a.init=function()local A=c.read()print("position.lua 200")a.x=A.x;print("position.lua 201")a.y=A.y;print("position.lua 202")a.z=A.z;print("position.lua 203")a.d=A.d;print("position.lua 204")b.positionConfirmed=A.positionConfirmed;print("position.lua 206")b.directionConfirmed=A.directionConfirmed;print("position.lua 207")if not b.tryUpdateCustom()then b.tryUpdateGps()print("position.lua 210")b.tryUpdateCompass()print("position.lua 211")end;b.inSync=b.positionConfirmed and b.directionConfirmed or b.trySync()print("position.lua 214")end;a.init()print("position.lua 216")turtlecraft.position.isInSync=function()return b.inSync end;turtlecraft.position.syncTo=function(x,y,z,d)a.x=x;print("position.lua 223")a.y=y;print("position.lua 224")a.z=z;print("position.lua 225")a.d=d;print("position.lua 226")b.inSync=true;print("position.lua 227")end;turtlecraft.position.get=function()return a.x,a.y,a.z,a.d end;turtlecraft.position.set=function(x,y,z,d,B)if type(d)~="number"then d=a.d end;local l={x=a.x,y=a.y,z=a.z,d=a.d}print("position.lua 237")local j={x=x,y=y,z=z,d=d}print("position.lua 238")c.write(j,l)print("position.lua 239")if B==nil or B()==false then c.write(l)print("position.lua 241")return false end;c.write(j)print("position.lua 244")a.x=x;print("position.lua 246")a.y=y;print("position.lua 247")a.z=z;print("position.lua 248")a.d=d;print("position.lua 249")return true end end;turtlecraft.scope()print("position.lua 255")
--fuel.lua
turtlecraft.fuel={}print("fuel.lua 1")turtlecraft.scope=function()local a={fuelSlot=1,fuelPerBurn=0,itemsPerBurn=1}print("fuel.lua 8")a.getRefuelCount=function()return turtle.getItemCount(a.fuelSlot)end;a.burn=function()turtle.select(a.fuelSlot)print("fuel.lua 15")local b=turtle.getFuelLevel()print("fuel.lua 16")if not turtle.refuel(a.itemsPerBurn)then return false end;local c=turtle.getFuelLevel()print("fuel.lua 18")a.fuelPerBurn=c-b;print("fuel.lua 19")return true end;turtlecraft.fuel.estimateRemaining=function()local d=turtle.getFuelLevel()print("fuel.lua 24")local e=a.getRefuelCount()print("fuel.lua 25")local f=e*a.fuelPerBurn;print("fuel.lua 26")return d+f end;turtlecraft.fuel.require=function(g)if g==nil then g=1 end;while turtle.getFuelLevel()<g do if not a.burn()then print("Turtle ran out of fuel! Please put more in slot 1")print("fuel.lua 34")while not a.burn()do sleep(5)print("fuel.lua 36")end end end end end;turtlecraft.scope()print("fuel.lua 42")
--move.lua
turtlecraft.move={}print("move.lua 1")turtlecraft.scope=function()local a={}print("move.lua 4")local directions=turtlecraft.position.directions;print("move.lua 5")a.face=function(b)if b==directions.up or b==directions.down then return true end;local c,d,e,f=turtlecraft.position.get()print("move.lua 9")if f==b then return true end;if f%90~=0 then error("Facing directions must be multiples of 90 degrees")end;if(f+270)%360==b then turtlecraft.position.set(c,d,e,b,turtle.turnLeft)print("move.lua 13")else while f~=b do f=(f+90)%360;print("move.lua 16")turtlecraft.position.set(c,d,e,f,turtle.turnRight)print("move.lua 17")end end;return true end;a.dig=function()return not turtle.detect()or turtle.dig()end;a.digUp=function()return not turtle.detectUp()or turtle.digUp()end;a.digDown=function()return not turtle.detectDown()or turtle.digDown()end;a.excavate=function()a.digUp()print("move.lua 27")a.digDown()print("move.lua 28")return a.dig()end;a.excavateUp=function()a.dig()print("move.lua 32")a.digDown()print("move.lua 33")return a.digUp()end;a.excavateDown=function()a.dig()print("move.lua 37")a.digUp()print("move.lua 38")return a.digDown()end;a.move=function(b,g,h,i)local move=turtle.forward;print("move.lua 43")if b==directions.up then move=turtle.up end;if b==directions.down then move=turtle.down end;local c,d,e,f=turtlecraft.position.get()print("move.lua 47")if b==directions.up then e=e+1 end;if b==directions.down then e=e-1 end;if b==directions.north then d=d+1 end;if b==directions.south then d=d-1 end;if b==directions.east then c=c+1 end;if b==directions.west then c=c-1 end;local j=function()turtlecraft.fuel.require(1)print("move.lua 56")while not move()do if i~=nil and i(b)==false then return false end;sleep(.01)print("move.lua 59")end;return true end;a.face(b)print("move.lua 64")if g~=nil and g(b)==false then return false end;if turtlecraft.position.set(c,d,e,b,j)==false then return false end;if h~=nil and h(b)==false then return false end;return true end;a.repeatMove=function(k,to,l,m,g,h,i)local n=to-k;print("move.lua 72")local b=l;print("move.lua 73")if n<0 then b=m end;for o=1,math.abs(n)do if a.move(b,g,h,i)==false then return false end end;return true end;a.moveTo=function(c,d,e,g,h,i)local p,q,r,s=turtlecraft.position.get()print("move.lua 82")if a.repeatMove(p,c,directions.east,directions.west,g,h,i)==false then return false end;if a.repeatMove(q,d,directions.north,directions.south,g,h,i)==false then return false end;if a.repeatMove(r,e,directions.up,directions.down,g,h,i)==false then return false end;return true end;turtlecraft.move.face=function(b)return a.face(b)end;turtlecraft.move.to=function(c,d,e,j)return a.moveTo(c,d,e,nil,j,nil)end;turtlecraft.move.digTo=function(c,d,e,j)local dig=function(b)if b==directions.up then return a.digUp()elseif b==directions.down then return a.digDown()else return a.dig()end end;return a.moveTo(c,d,e,dig,j,dig)end;turtlecraft.move.excavateTo=function(c,d,e,j)local dig=function(b)if b==directions.up then return a.excavateUp()elseif b==directions.down then return a.excavateDown()else return a.excavate()end end;return a.moveTo(c,d,e,dig,j,dig)end end;turtlecraft.scope()print("move.lua 115")
--excavate.lua
turtlecraft.excavate={}print("excavate.lua 1")turtlecraft.scope=function()local position=turtlecraft.position;print("excavate.lua 5")local a=position.directions;print("excavate.lua 6")local b=turtlecraft.term;print("excavate.lua 7")local c={}print("excavate.lua 9")local d={}print("excavate.lua 10")local move={}print("excavate.lua 11")d.path=turtlecraft.directory.."excavate.data"print("excavate.lua 13")d.init=function(e,f,g,h,i)local j,k,l,m=position.get()print("excavate.lua 15")d.home={j=j,k=k,l=l,m=(m+180)%360}print("excavate.lua 16")d.step={j=1,k=1,l=-3}print("excavate.lua 17")d.min={j=j,k=k,l=l-math.abs(i)+1}print("excavate.lua 18")d.max={j=j,k=k,l=l+math.abs(h)-1}print("excavate.lua 19")if m==a.north then d.max.y=d.max.y+math.abs(e)print("excavate.lua 22")d.min.x=d.min.x-math.abs(f)print("excavate.lua 23")d.max.x=d.max.x+math.abs(g)print("excavate.lua 24")elseif m==a.south then d.min.y=d.min.y-math.abs(e)print("excavate.lua 26")d.min.x=d.min.x-math.abs(g)print("excavate.lua 27")d.max.x=d.max.x+math.abs(f)print("excavate.lua 28")elseif m==a.east then d.max.x=d.max.x+math.abs(e)print("excavate.lua 30")d.min.y=d.min.y-math.abs(g)print("excavate.lua 31")d.max.y=d.max.y+math.abs(f)print("excavate.lua 32")else d.min.x=d.min.x-math.abs(e)print("excavate.lua 34")d.min.y=d.min.y-math.abs(f)print("excavate.lua 35")d.max.y=d.max.y+math.abs(g)print("excavate.lua 36")end;d.progress={j=d.min.x,k=d.min.y,l=d.max.z}print("excavate.lua 38")end;d.update=function()local j,k,l,m=position.get()print("excavate.lua 41")d.progress={j=j,k=k,l=l}print("excavate.lua 42")local n=fs.open(d.path,"w")print("excavate.lua 43")n.writeLine(d.home.x..","..d.home.y..","..d.home.z..","..d.home.d)print("excavate.lua 44")n.writeLine(j..","..k..","..l)print("excavate.lua 45")n.writeLine(d.min.x..","..d.min.y..","..d.min.z)print("excavate.lua 46")n.writeLine(d.max.x..","..d.max.y..","..d.max.z)print("excavate.lua 47")n.writeLine(d.step.x..","..d.step.y..","..d.step.z)print("excavate.lua 48")n.close()print("excavate.lua 49")end;d.reset=function()fs.delete(d.path)print("excavate.lua 52")local j,k,l,m=position.get()print("excavate.lua 53")d.home={j=j,k=k,l=l,m=(m+180)%360}print("excavate.lua 54")d.progress={j=j,k=k,l=l}print("excavate.lua 55")d.min={j=j,k=k,l=l}print("excavate.lua 56")d.max={j=j,k=k,l=l}print("excavate.lua 57")d.step={j=1,k=1,l=-3}print("excavate.lua 58")end;d.recover=function()if not fs.exists(d.path)then return false end;local n=fs.open(d.path,"r")print("excavate.lua 62")local o=n.readLine()print("excavate.lua 63")local p=n.readLine()print("excavate.lua 64")local q=n.readLine()print("excavate.lua 65")local r=n.readLine()print("excavate.lua 66")local s=n.readLine()print("excavate.lua 67")n.close()print("excavate.lua 68")if not position.isInSync()or o==nil or p==nil or q==nil or r==nil or s==nil then print("Warning: Unable to resume dig")print("excavate.lua 70")return false end;local t="[^,]+"print("excavate.lua 73")local u={o=o,p=p,min=q,max=r,step=s}print("excavate.lua 81")for v,w in pairs(u)do local x=string.gmatch(w,t)print("excavate.lua 84")if d[v]==nil then d[v]={}end;local y=d[v]print("excavate.lua 86")y.x=tonumber(x()or 0)print("excavate.lua 87")y.y=tonumber(x()or 0)print("excavate.lua 88")y.z=tonumber(x()or 0)print("excavate.lua 89")y.d=tonumber(x()or"")print("excavate.lua 90")end;fs.delete(d.path)print("excavate.lua 93")return true end;d.calcDistance=function(j,k,l)local z,A,B,C=position.get()print("excavate.lua 97")local D=math.abs(z-j)print("excavate.lua 98")local E=math.abs(A-k)print("excavate.lua 99")local F=math.abs(B-l)print("excavate.lua 100")return D+E+F+5 end;d.calcReturn=function()return d.calcDistance(d.home.x,d.home.y,d.home.z)end;c.calcRemainingSlots=function()local G=0;print("excavate.lua 109")for H=2,16 do if turtle.getItemCount(H)==0 then G=G+1 end end;return G end;c.needsUnload=function()return c.calcRemainingSlots()==0 end;c.unload=function()turtlecraft.move.face(d.home.d)print("excavate.lua 117")for H=2,16 do if turtle.getItemCount(H)>0 then turtle.select(H)print("excavate.lua 120")if not turtle.drop()then error("Fatal Error: Can't unload inventory.")print("excavate.lua 122")end end end end;move.home=function(I)turtlecraft.move.digTo(d.home.x,d.home.y,d.home.z)print("excavate.lua 130")I()print("excavate.lua 131")turtlecraft.move.face((d.home.d+180)%360)print("excavate.lua 132")turtlecraft.move.digTo(d.progress.x,d.progress.y,d.progress.z)print("excavate.lua 133")end;move.finish=function()fs.delete(d.path)print("excavate.lua 136")turtlecraft.move.digTo(d.home.x,d.home.y,d.home.z)print("excavate.lua 137")turtlecraft.move.face(d.home.d)print("excavate.lua 138")c.unload()print("excavate.lua 139")turtle.select(1)print("excavate.lua 140")turtle.drop()print("excavate.lua 141")turtlecraft.move.face((d.home.d+180)%360)print("excavate.lua 142")d.reset()print("excavate.lua 143")end;move.next=function()local J=d.calcDistance(d.progress.x,d.progress.y,d.progress.z)print("excavate.lua 146")local K=d.calcReturn()print("excavate.lua 147")local fuel=turtlecraft.fuel.estimateRemaining()print("excavate.lua 148")if c.needsUnload()or fuel<=J or fuel<=K then move.home(function()local L=d.calcDistance(d.progress.x,d.progress.y,d.progress.z)print("excavate.lua 152")turtlecraft.fuel.require(L)print("excavate.lua 153")c.unload()print("excavate.lua 154")end)print("excavate.lua 155")end;if not turtlecraft.move.digTo(d.progress.x,d.progress.y,d.progress.z)then move.finish()print("excavate.lua 158")return false end;local M=turtlecraft.move.excavateTo;print("excavate.lua 162")local y={j=d.progress.x,k=d.progress.y,l=d.progress.z}print("excavate.lua 163")y.x=y.x+d.step.x;print("excavate.lua 164")if y.x>d.max.x or y.x<d.min.x then d.step.x=-d.step.x;print("excavate.lua 166")y.x=y.x+d.step.x;print("excavate.lua 167")y.y=d.progress.y+d.step.y;print("excavate.lua 168")if y.y>d.max.y or y.y<d.min.y then d.step.y=-d.step.y;print("excavate.lua 170")y.y=y.y+d.step.y;print("excavate.lua 171")y.z=y.z+d.step.z;print("excavate.lua 172")M=turtlecraft.move.digTo;print("excavate.lua 173")turtle.digUp()if y.z==d.min.z-1 or y.z==d.min.z-2 then y.z=d.min.z;print("excavate.lua 176")end;if y.z<d.min.z then move.finish()print("excavate.lua 179")return false end end end;if not M(y.x,y.y,y.z)then print("move failed")print("excavate.lua 186")local j,k,l,m=turtlecraft.position.get()print("excavate.lua 187")if j==d.progress.x and k==d.progress.y and l==d.progress.z then print("Unable to dig further")print("excavate.lua 189")move.finish()print("excavate.lua 190")return false end end;d.update()print("excavate.lua 194")return true end;move.start=function(e,f,g,h,i)d.init(e,f,g,h,i)print("excavate.lua 198")turtlecraft.term.write(1,5,"Press Q to cancel")print("excavate.lua 199")turtlecraft.input.escapeOnKey(16,function()while move.next()do sleep(0.001)print("excavate.lua 202")end end)print("excavate.lua 204")d.reset()print("excavate.lua 205")end;local N=function(j,k)term.setCursorPos(j,k)print("excavate.lua 210")local O=tonumber(read()or"")print("excavate.lua 211")if O==nil then return 0 end;return O end;if d.recover()then if not b.notifyResume("excavating")then b.clear("Excavate")print("excavate.lua 218")b.write(1,5,"Excavate cancelled...")print("excavate.lua 219")sleep(3)print("excavate.lua 220")return end;b.clear("Excavate")print("excavate.lua 223")b.write(1,5,"Resuming excavate...")print("excavate.lua 224")term.setCursorPos(1,6)print("excavate.lua 225")while move.next()do sleep(0.001)print("excavate.lua 227")end end;turtlecraft.excavate.start=function()b.clear("Excavate")print("excavate.lua 232")b.write(1,4,"How far forward?")print("excavate.lua 233")local e=N(18,4)print("excavate.lua 234")if e==0 then return false end;b.write(1,4,"How far left?")print("excavate.lua 236")local f=N(15,4)print("excavate.lua 237")b.write(1,4,"How far right?")print("excavate.lua 238")local g=N(16,4)print("excavate.lua 239")if f==0 and g==0 then return false end;b.write(1,4,"How far up?")print("excavate.lua 241")local h=N(13,4)print("excavate.lua 242")b.write(1,4,"How far down?")print("excavate.lua 243")local i=N(15,4)print("excavate.lua 244")if h==0 and i==0 then return false end;b.clear("Excavate")print("excavate.lua 247")move.start(e,f,g,h,i)print("excavate.lua 248")b.clear("Excavate")print("excavate.lua 249")b.write(1,4,"Digging is complete.")print("excavate.lua 250")b.write(1,5,"Press any key to continue.")print("excavate.lua 251")term.setCursorPos(0,0)print("excavate.lua 252")turtlecraft.input.readKey(10)print("excavate.lua 253")end;turtlecraft.excavate.debug={}print("excavate.lua 256")turtlecraft.excavate.debug.start=function(e,f,g,h,i)move.start(e,f,g,h,i)print("excavate.lua 258")end end;turtlecraft.scope()print("excavate.lua 261")
--seeker.lua
turtlecraft.seeker={}print("seeker.lua 1")turtlecraft.scope=function()local a=turtlecraft.directory.."seeker.data"print("seeker.lua 5")local b=function(c)turtle.turnRight()turtle.turnRight()local d=c()turtle.turnRight()turtle.turnRight()return d end;local e={up="up",down="down",forward="forward"}print("seeker.lua 7")local f={turtle.turnRight,turtle.turnLeft,turtle.turnLeft,turtle.turnLeft}print("seeker.lua 8")local g={}print("seeker.lua 10")g.write=function(h,i)local j=fs.open(a,"w")print("seeker.lua 12")j.write(h..","..i)print("seeker.lua 13")j.close()print("seeker.lua 14")end;g.complete=function()fs.delete(a)print("seeker.lua 17")end;g.read=function()if not fs.exists(a)then return nil end;local j=fs.open(a,"r")print("seeker.lua 21")local k=j.readLine()print("seeker.lua 22")j.close()print("seeker.lua 23")if k==nil then return nil end;local l=string.gmatch(k,"[^,]+")print("seeker.lua 25")return l(),l()end;local m=function()local n=0;print("seeker.lua 30")while true do for o=1,16 do if turtle.getItemCount(o)==0 then sleep(n)print("seeker.lua 34")return end end;n=15;print("seeker.lua 38")turtlecraft.term.clear("Inventory")print("seeker.lua 39")turtlecraft.term.write(1,5,"Please unload me...")print("seeker.lua 40")sleep(1)print("seeker.lua 41")end end;local p=function()local n=0;print("seeker.lua 46")while true do for o=2,16 do if turtle.getItemCount(o)>0 then sleep(n)print("seeker.lua 50")if turtle.getItemCount(o)>0 then turtle.select(o)print("seeker.lua 52")return o end end end;n=15;print("seeker.lua 57")turtlecraft.term.clear("Inventory")print("seeker.lua 58")turtlecraft.term.write(1,5,"Please add more inventory...")print("seeker.lua 59")sleep(1)print("seeker.lua 60")end end;local eat=function(compare,i)if i==nil then i=e.down;print("seeker.lua 66")if turtle.detectUp()and not turtle.detectDown()then i=e.up end end;if compare and turtle.getItemCount(2)==0 then turtle.select(2)print("seeker.lua 71")turtlecraft.fuel.require(1)print("seeker.lua 72")if turtle.detectUp()then turtle.digUp()print("seeker.lua 74")turtle.up()print("seeker.lua 75")elseif turtle.detectDown()then turtle.digDown()print("seeker.lua 77")turtle.down()print("seeker.lua 78")else turtlecraft.term.clear()print("seeker.lua 80")turtlecraft.term.write(1,5,"I need a sample block to unfill with.")print("seeker.lua 81")turtlecraft.input.readKey(5)print("seeker.lua 82")return end;g.write("unfill",i)print("seeker.lua 85")else g.write("eat",i)print("seeker.lua 87")end;local q=turtle.detectUp;print("seeker.lua 90")local r=turtle.detectDown;print("seeker.lua 91")local s=turtle.detect;print("seeker.lua 92")if compare then q=function()turtle.select(2)return turtle.compareUp()end;r=function()turtle.select(2)return turtle.compareDown()end;s=function()turtle.select(2)return turtle.compare()end end;local t={move=turtle.up,detect=q,dig=turtle.digUp}print("seeker.lua 99")local u={move=turtle.down,detect=r,dig=turtle.digDown}print("seeker.lua 100")if i==e.up then t={move=turtle.down,detect=r,dig=turtle.digDown}print("seeker.lua 102")u={move=turtle.up,detect=q,dig=turtle.digUp}print("seeker.lua 103")end;local v=function()for o,w in pairs(f)do w()print("seeker.lua 108")if s()then return true end end;return false end;local x=function()t.move()print("seeker.lua 115")for y=1,3 do for z=1,4 do turtlecraft.fuel.require(2)print("seeker.lua 118")turtle.forward()turtle.forward()print("seeker.lua 119")if t.detect()or u.detect()or v()then return true end;turtle.turnLeft()print("seeker.lua 121")end;u.move()print("seeker.lua 123")end;return false end;turtlecraft.term.clear("Munch Munch")print("seeker.lua 128")turtlecraft.term.write(1,5,"Press Q to stop")print("seeker.lua 129")turtlecraft.input.escapeOnKey(16,function()while true do turtlecraft.fuel.require(1)print("seeker.lua 132")m()print("seeker.lua 133")if t.detect()then t.dig()print("seeker.lua 135")t.move()print("seeker.lua 136")elseif v()then while s()and turtle.dig()do sleep(0.5)end;turtle.forward()print("seeker.lua 139")elseif u.detect()then while u.detect()and u.dig()do sleep(0.5)end;u.move()print("seeker.lua 142")elseif not x()then turtlecraft.term.clear("All Gone?")print("seeker.lua 144")turtlecraft.term.write(1,5,"I got lost!")print("seeker.lua 145")turtlecraft.input.readKey(10)print("seeker.lua 146")return end end end)print("seeker.lua 150")g.complete()print("seeker.lua 151")end;turtlecraft.seeker.eat=function(i)eat(false,i)print("seeker.lua 155")end;turtlecraft.seeker.unfill=function(i)eat(true,i)print("seeker.lua 159")end;turtlecraft.seeker.fill=function(i)if i==nil then i=e.down;print("seeker.lua 164")if turtle.detectDown()and not turtle.detectUp()then i=e.up end end;g.write("fill",i)print("seeker.lua 167")local t={move=turtle.up,detect=turtle.detectUp}print("seeker.lua 168")local u={move=turtle.down,detect=turtle.detectDown,place=turtle.placeUp}print("seeker.lua 169")if i==e.up then t={move=turtle.down,detect=turtle.detectDown}print("seeker.lua 171")u={move=turtle.up,detect=turtle.detectUp,place=turtle.placeDown}print("seeker.lua 172")end;local v=function()for o,w in pairs(f)do w()print("seeker.lua 177")if turtle.back()then return true end end;return false end;turtlecraft.term.clear("Fill")print("seeker.lua 183")turtlecraft.term.write(1,5,"Press Q to stop")print("seeker.lua 184")turtlecraft.input.escapeOnKey(16,function()while true do turtlecraft.fuel.require(1)print("seeker.lua 187")if not t.detect()then t.move()print("seeker.lua 189")elseif v()then p()print("seeker.lua 191")turtle.place()print("seeker.lua 192")else turtle.turnLeft()print("seeker.lua 194")turtle.turnLeft()print("seeker.lua 195")if u.detect()then turtlecraft.term.write(1,5,"I got stuck!")print("seeker.lua 197")turtlecraft.term.write(1,6,"Press any key to continue")print("seeker.lua 198")turtlecraft.input.readKey()print("seeker.lua 199")return end;u.move()print("seeker.lua 202")p()print("seeker.lua 203")u.place()print("seeker.lua 204")end end end)print("seeker.lua 207")g.complete()print("seeker.lua 208")end;local A,B=g.read()print("seeker.lua 211")if A~=nil then turtlecraft.seeker[A](B)print("seeker.lua 213")end end;turtlecraft.scope()print("seeker.lua 216")
--builder.lua
turtlecraft.builder={}print("builder.lua 1")turtlecraft.scope=function()local a=turtlecraft.directory.."project.data"print("builder.lua 4")local b=turtlecraft.directory.."builder.data"print("builder.lua 5")local c={}print("builder.lua 7")c.data={}print("builder.lua 8")c.load=function()if not fs.exists(a)then return false end;local d=fs.open(a,"r").readAll()or""print("builder.lua 11")c.data={}print("builder.lua 12")local e=string.gmatch(d,"[^,]+")print("builder.lua 13")for f in e do local g={x=tonumber(f),y=tonumber(e()),z=tonumber(e())}print("builder.lua 15")table.insert(c.data,g)print("builder.lua 16")end;return true end;c.save=function()local d=""print("builder.lua 21")for i,v in ipairs(c.data)do d=d..v.x..","..v.y..","..v.z..","print("builder.lua 23")end;local j=fs.open(a,"w")print("builder.lua 25")j.write(d)print("builder.lua 26")j.close()print("builder.lua 27")end;c.clear=function()c.data={}print("builder.lua 30")fs.delete(a)print("builder.lua 31")end;c.load()print("builder.lua 33")local k={}print("builder.lua 35")k.isEnabled=function()return fs.exists(b)end;k.set=function(l)local d=fs.open(b,"w")print("builder.lua 40")d.write(l.x..","..l.y..","..l.z)print("builder.lua 41")d.close()print("builder.lua 42")end;k.get=function()local d=fs.open(b,"r")print("builder.lua 45")local m=string.gmatch(d.readAll(),"[^,]+")print("builder.lua 46")d.close()print("builder.lua 47")return{x=tonumber(m()),y=tonumber(m()),z=tonumber(m())}end;k.disable=function()fs.delete(b)print("builder.lua 55")end;local n={}print("builder.lua 59")n.round=function(o)if o%1>=0.5 then return math.ceil(o)else return math.floor(o)end end;n.plot=function(p,q)return{h=math.cos(math.rad(p))*q,v=math.sin(math.rad(p))*q}end;n.measure=function(x,y,z)if x==nil then x=0 end;if y==nil then y=0 end;if z==nil then z=0 end;return math.sqrt(x*x+y*y+z*z)end;n.angleStep=function(r)return 45/r/2 end;n.rotateVector=function(g,s,t,u)if s==nil then s=0 end;if t==nil then t=0 end;if u==nil then u=0 end;if s==0 and t==0 and u==0 then return end;if s~=0 then local w=math.cos(math.rad(s))print("builder.lua 90")local A=math.sin(math.rad(s))print("builder.lua 91")local B=w*g.z-A*g.y;print("builder.lua 92")local C=A*g.z+w*g.y;print("builder.lua 93")g.z=B;print("builder.lua 94")g.y=C;print("builder.lua 95")end;if t~=0 then local D=math.cos(math.rad(t))print("builder.lua 99")local E=math.sin(math.rad(t))print("builder.lua 100")local F=D*g.x-E*g.z;print("builder.lua 101")local G=E*g.x+D*g.z;print("builder.lua 102")g.x=F;print("builder.lua 103")g.z=G;print("builder.lua 104")end;if u~=0 then local H=math.cos(math.rad(u))print("builder.lua 108")local I=math.sin(math.rad(u))print("builder.lua 109")local J=H*g.x-I*g.y;print("builder.lua 110")local K=I*g.x+H*g.y;print("builder.lua 111")g.x=J;print("builder.lua 112")g.y=K;print("builder.lua 113")end end;n.scaleVector=function(g,L,M,N)if L==nil then L=1 end;if M==nil then M=1 end;if N==nil then N=1 end;if L==1 and M==1 and N==1 then return end;g.x=g.x*L;print("builder.lua 121")g.y=g.y*M;print("builder.lua 122")g.z=g.z*N;print("builder.lua 123")end;n.roundVector=function(g)g.x=n.round(g.x)print("builder.lua 126")g.y=n.round(g.y)print("builder.lua 127")g.z=n.round(g.z)print("builder.lua 128")end;n.line=function(O,P)local Q={}print("builder.lua 131")local g={x=P.x-O.x,y=P.y-O.y,z=P.z-O.z}local R=n.measure(g.x,g.y,g.z)print("builder.lua 137")for S=0,R,0.5 do table.insert(Q,{x=O.x+g.x/R*S,y=O.y+g.y/R*S,z=O.z+g.z/R*S})print("builder.lua 143")end;return Q end;n.bounds=function(Q)local T=0;local U=0;local V=0;local W=0;local X=0;local Y=0;print("builder.lua 148")for i,v in ipairs(Q)do if v.x<T then T=v.x end;if v.x>U then U=v.x end;if v.y>V then V=v.y end;if v.y<W then W=v.y end;if v.z>X then X=v.z end;if v.z<Y then Y=v.z end end;return V,W,U,T,X,Y end;local Z={}print("builder.lua 161")Z.concat=function(_,a0)local a1={}print("builder.lua 163")for i,v in ipairs(_)do table.insert(a1,v)end;for i,v in ipairs(a0)do table.insert(a1,v)end;return a1 end;Z.group=function(a2,a3)local a4={}print("builder.lua 169")local a5={}print("builder.lua 170")for i,a6 in ipairs(a2)do local a7=a3(a6)print("builder.lua 173")if a5[a7]==nil then a5[a7]={}end;table.insert(a5[a7],a6)print("builder.lua 175")end;local a8={}print("builder.lua 178")for a7 in pairs(a5)do table.insert(a8,a7)print("builder.lua 180")end;table.sort(a8)print("builder.lua 182")for i,a7 in ipairs(a8)do table.insert(a4,a5[a7])print("builder.lua 185")end;return a4 end;Z.extractNearestVector=function(Q,g)if Q==nill or g==nil or Q[1]==nil then return nil end;local a9=0;print("builder.lua 191")local q=nil;print("builder.lua 192")for i,aa in ipairs(Q)do local ab=n.measure(aa.x-g.x,aa.y-g.y,aa.z-g.z)print("builder.lua 195")if q==nil or ab<q then q=ab;print("builder.lua 197")a9=i;print("builder.lua 198")end end;return table.remove(Q,a9)end;Z.sortVectors=function(Q)local a4={}print("builder.lua 205")local ac=Z.group(Q,function(v)return v.z end)print("builder.lua 207")for ad,ae in ipairs(ac)do local af={}print("builder.lua 209")local ag=Z.group(ae,function(v)return v.y end)print("builder.lua 210")for ah,ai in ipairs(ag)do local aj=Z.group(ai,function(v)return v.x end)print("builder.lua 212")for ak,al in ipairs(aj)do table.insert(af,al[1])print("builder.lua 214")end end;if af[1]~=nil then local g=table.remove(af,1)print("builder.lua 218")table.insert(a4,g)print("builder.lua 219")while af[1]~=nil do g=Z.extractNearestVector(af,g)print("builder.lua 222")table.insert(a4,g)print("builder.lua 223")end end end;return a4 end;local am={}print("builder.lua 232")am.line=function(r)return n.line({x=-r,y=0,z=0},{x=r,y=0,z=0})end;am.circle=function(r)local Q={}print("builder.lua 237")local an=n.angleStep(r)print("builder.lua 238")for p=0,360,an do local ao=n.plot(p,r)print("builder.lua 240")table.insert(Q,{x=ao.h,y=ao.v,z=0})print("builder.lua 241")end;return Q end;am.polygon=function(r,ap)if ap<3 then return nil end;local Q={}print("builder.lua 247")local an=360/ap;print("builder.lua 248")local aq=nil;print("builder.lua 249")for p=0,360,an do corner=n.plot(p,r)print("builder.lua 251")if aq~=nil then Q=Z.concat(Q,n.line({x=aq.h,y=aq.v,z=0},{x=corner.h,y=corner.v,z=0}))print("builder.lua 261")end;aq=corner;print("builder.lua 263")end;return Q end;local ar={}print("builder.lua 269")ar.tube=function(r,as)local a1={}print("builder.lua 271")for z=-r,r do for i,v in ipairs(as)do table.insert(a1,{x=v.x,y=v.y,z=z})print("builder.lua 278")end end;return a1 end;ar.cone=function(r,as)local a1={}print("builder.lua 284")for z=-r,r do local at=1/r*2*math.abs(z-r)print("builder.lua 286")for i,v in ipairs(as)do table.insert(a1,{x=v.x*at,y=v.y*at,z=z})print("builder.lua 292")end end;return a1 end;ar.sphere=function(r,as)local a1={}print("builder.lua 298")local an=n.angleStep(r)print("builder.lua 299")for p=0,180,an do local au=n.plot(p,r)print("builder.lua 301")local z=au.h;print("builder.lua 302")local at=au.v/r;print("builder.lua 303")for i,v in ipairs(as)do table.insert(a1,{x=v.x*at,y=v.y*at,z=z})print("builder.lua 309")end end;return a1 end;ar.torus=function(r,as)local a1={}print("builder.lua 315")local an=n.angleStep(r)print("builder.lua 316")local av=0;print("builder.lua 317")for i,v in ipairs(as)do if v.x<av then av=v.x end end;local aw=r-av;print("builder.lua 321")for i,v in ipairs(as)do v.x=v.x-aw;print("builder.lua 323")table.insert(a1,v)print("builder.lua 324")end;for p=0,360,an do for i,v in ipairs(as)do local g={x=v.x,y=v.y,z=v.z}print("builder.lua 328")n.rotateVector(g,0,p,0)print("builder.lua 329")table.insert(a1,g)print("builder.lua 330")end end;return a1 end;local ax=function()local ay=0;print("builder.lua 337")while true do for i=2,16 do if turtle.getItemCount(i)>0 then sleep(ay)print("builder.lua 341")if turtle.getItemCount(i)>0 then turtle.select(i)print("builder.lua 343")return i end end end;ay=15;print("builder.lua 348")turtlecraft.term.clear("Inventory")print("builder.lua 349")turtlecraft.term.write(1,5,"Please add more inventory...")print("builder.lua 350")sleep(1)print("builder.lua 351")end end;local az=function(l)turtlecraft.term.clear("Build Project")print("builder.lua 356")turtlecraft.term.write(1,4,"Press Q to cancel")print("builder.lua 357")turtlecraft.input.escapeOnKey(16,function()local aA=false;print("builder.lua 359")local x,y,z,S=turtlecraft.position.get()print("builder.lua 360")for i,v in ipairs(c.data)do local aB={x=v.x+l.x,y=v.y+l.y,z=v.z+l.z}print("builder.lua 366")if not aA then aA=aB.x==x and aB.y==y and aB.z==z;print("builder.lua 368")else turtlecraft.move.digTo(aB.x,aB.y,aB.z)print("builder.lua 370")if turtle.detectDown()then turtle.digDown()end;ax()print("builder.lua 372")turtle.placeDown()print("builder.lua 373")end end end)print("builder.lua 376")k.disable()print("builder.lua 377")end;turtlecraft.builder.clear=function()turtlecraft.term.clear("Delete Project")print("builder.lua 381")turtlecraft.term.write(1,4,"You will lose all stored data.")print("builder.lua 382")turtlecraft.term.write(1,5,"Are you sure? (y, n): ")print("builder.lua 383")if read()=="y"then c.data={}print("builder.lua 386")c.save()print("builder.lua 387")turtlecraft.term.clear("Delete Project")print("builder.lua 388")turtlecraft.term.write(1,4,"Project erased!")print("builder.lua 389")turtlecraft.input.readKey(5)print("builder.lua 390")else turtlecraft.term.clear("Delete Project")print("builder.lua 392")turtlecraft.term.write(1,4,"Erase cancelled!")print("builder.lua 393")turtlecraft.input.readKey(5)print("builder.lua 394")end end;turtlecraft.builder.stats=function()turtlecraft.term.clear("Project Info")print("builder.lua 399")local aC=table.getn(c.data)print("builder.lua 400")if aC==0 then turtlecraft.term.write(1,4,"Your project is empty")print("builder.lua 403")turtlecraft.input.readKey(5)print("builder.lua 404")return end;local V,W,U,T,X,Y=n.bounds(c.data)print("builder.lua 408")turtlecraft.term.write(1,4,"Block Count: "..aC)print("builder.lua 410")turtlecraft.term.write(1,5,math.abs(V).." blocks north.")print("builder.lua 411")turtlecraft.term.write(1,6,math.abs(W).." blocks south.")print("builder.lua 412")turtlecraft.term.write(1,7,math.abs(U).." blocks east.")print("builder.lua 413")turtlecraft.term.write(1,8,math.abs(T).." blocks west.")print("builder.lua 414")turtlecraft.term.write(1,9,math.abs(X).." blocks up.")print("builder.lua 415")turtlecraft.term.write(1,10,math.abs(Y).." blocks down.")print("builder.lua 416")turtlecraft.input.readKey(15)print("builder.lua 417")end;turtlecraft.builder.start=function()if table.getn(c.data)==0 then turtlecraft.term.write(1,4,"Your project is empty")print("builder.lua 422")sleep(5)print("builder.lua 423")return end;local start=c.data[1]print("builder.lua 427")local x,y,z,S=turtlecraft.position.get()print("builder.lua 428")local l={x=x,y=y,z=z}print("builder.lua 429")k.set(l)print("builder.lua 430")turtlecraft.move.digTo(start.x+l.x,start.y+l.y,start.z+l.z)print("builder.lua 431")az(l)print("builder.lua 432")end;turtlecraft.builder.trim=function()turtlecraft.term.clear("Trim")print("builder.lua 436")turtlecraft.term.write(1,4,"This will allow you to trim off")print("builder.lua 437")turtlecraft.term.write(1,5,"blocks from the sides of your project.")print("builder.lua 438")local aD,aE,aF,aG,aH,aI=n.bounds(c.data)print("builder.lua 440")turtlecraft.term.write(1,6,"How much from the north?")print("builder.lua 442")turtlecraft.term.write(1,7,"(0-"..math.abs(aD).."): ")print("builder.lua 443")local V=aD-math.max(0,math.min(math.abs(aD),tonumber(read()or 0)))print("builder.lua 444")turtlecraft.term.write(1,6,"How much from the south?")print("builder.lua 446")turtlecraft.term.write(1,7,"(0-"..math.abs(aE).."): ")print("builder.lua 447")local W=aE+math.max(0,math.min(math.abs(aE),tonumber(read()or 0)))print("builder.lua 448")turtlecraft.term.write(1,6,"How much from the east?")print("builder.lua 450")turtlecraft.term.write(1,7,"(0-"..math.abs(aF).."): ")print("builder.lua 451")local U=aF-math.max(0,math.min(math.abs(aF),tonumber(read()or 0)))print("builder.lua 452")turtlecraft.term.write(1,6,"How much from the west?")print("builder.lua 454")turtlecraft.term.write(1,7,"(0-"..math.abs(aG).."): ")print("builder.lua 455")local T=aG+math.max(0,math.min(math.abs(aG),tonumber(read()or 0)))print("builder.lua 456")turtlecraft.term.write(1,6,"How much from the up?")print("builder.lua 458")turtlecraft.term.write(1,7,"(0-"..math.abs(aH).."): ")print("builder.lua 459")local X=aH-math.max(0,math.min(math.abs(aH),tonumber(read()or 0)))print("builder.lua 460")turtlecraft.term.write(1,6,"How much from the down?")print("builder.lua 462")turtlecraft.term.write(1,7,"(0-"..math.abs(aI).."): ")print("builder.lua 463")local Y=aI+math.max(0,math.min(math.abs(aI),tonumber(read()or 0)))print("builder.lua 464")turtlecraft.term.clear("Trim")print("builder.lua 466")turtlecraft.term.write(1,4,"Calculating...")print("builder.lua 467")local a1={}print("builder.lua 469")for i,v in ipairs(c.data)do if v.y<=V and v.y>=W and v.x<=U and v.x>=T and v.z<=X and v.z>=Y then table.insert(a1,v)print("builder.lua 477")end end;c.data=a1;print("builder.lua 480")c.save()print("builder.lua 481")turtlecraft.term.clear("Trim")print("builder.lua 483")turtlecraft.term.write(1,4,"Trim complete!")print("builder.lua 484")turtlecraft.input.readKey(5)print("builder.lua 485")end;turtlecraft.builder.add=function()turtlecraft.term.clear("Add Shape")print("builder.lua 489")turtlecraft.term.write(1,4,"To create a shape you must select")print("builder.lua 490")turtlecraft.term.write(1,5,"how many sides you want your base")print("builder.lua 491")turtlecraft.term.write(1,6,"2D shape to be: (0 = circle, 1 = line)")print("builder.lua 492")turtlecraft.term.write(1,7,"Sides: ")print("builder.lua 493")local ap=tonumber(read()or 0)print("builder.lua 494")local aJ=am.circle;print("builder.lua 495")if ap==1 then aJ=am.line end;if ap>1 then aJ=function(r)return am.polygon(r,ap)end;print("builder.lua 498")end;turtlecraft.term.clear("Radius")print("builder.lua 501")turtlecraft.term.write(1,4,"Now choose the radius of your base")print("builder.lua 502")turtlecraft.term.write(1,5,"shape. (Radius is from center to edge)")print("builder.lua 503")turtlecraft.term.write(1,6,"Radius: ")print("builder.lua 504")local r=math.abs(tonumber(read()or 0))print("builder.lua 505")if r==0 then return end;turtlecraft.term.clear("Extrude Shape")print("builder.lua 509")turtlecraft.term.write(1,4,"Now you must choose how to extrude your")print("builder.lua 510")turtlecraft.term.write(1,5,"2D shape into a 3D shape: ")print("builder.lua 511")turtlecraft.term.write(1,7,"1 = tube, 2 = cone, ")print("builder.lua 512")turtlecraft.term.write(1,8,"3 = sphere, 4 = torus")print("builder.lua 513")turtlecraft.term.write(1,9,"Enter nothing to keep this a 2D shape.")print("builder.lua 514")turtlecraft.term.write(1,10,"Extrusion: ")print("builder.lua 515")local aK={"tube","cone","sphere","torus"}print("builder.lua 516")local aL=read()or""print("builder.lua 517")local a9=tonumber(aL or 0)print("builder.lua 518")for i,v in ipairs(aK)do if a9==i then aL=v;break end;if aL==v then break end end;local aM=function(r,am)return am end;if ar[aL]~=nil then aM=ar[aL]end;local am={}print("builder.lua 526")if aL=="torus"then turtlecraft.term.clear("Extrude Shape")print("builder.lua 528")turtlecraft.term.write(1,4,"I need a radius for your torus.")print("builder.lua 529")turtlecraft.term.write(1,5,"Radius: ")print("builder.lua 530")local aN=math.abs(tonumber(read()or 0))print("builder.lua 531")if aN==0 then return end;am=aM(aN,aJ(r))print("builder.lua 533")else am=aM(r,aJ(r))print("builder.lua 535")end;local aO=1;local aP=1;local aQ=1;print("builder.lua 538")turtlecraft.term.clear("Scale Shape")print("builder.lua 539")turtlecraft.term.write(1,4,"Would you like to squish your shape?")print("builder.lua 540")turtlecraft.term.write(1,5,"(y or n): ")print("builder.lua 541")if read()=="y"then turtlecraft.term.write(1,4,"Squish east-west...")print("builder.lua 543")turtlecraft.term.write(1,5,"(0 - 100): ")print("builder.lua 544")aO=math.max(0,math.min(100,tonumber(read()or 0)))/100;print("builder.lua 545")turtlecraft.term.write(1,4,"Squish north-south...")print("builder.lua 547")turtlecraft.term.write(1,5,"(0 - 100): ")print("builder.lua 548")aP=math.max(0,math.min(100,tonumber(read()or 0)))/100;print("builder.lua 549")turtlecraft.term.write(1,4,"Squish up-down...")print("builder.lua 551")turtlecraft.term.write(1,5,"(0 - 100): ")print("builder.lua 552")aQ=math.max(0,math.min(100,tonumber(read()or 0)))/100;print("builder.lua 553")end;local aR=0;local aS=0;local aT=0;print("builder.lua 556")turtlecraft.term.clear("Rotate Shape")print("builder.lua 557")turtlecraft.term.write(1,4,"Would you like to turn your shape?")print("builder.lua 558")turtlecraft.term.write(1,5,"(y or n): ")print("builder.lua 559")if read()=="y"then turtlecraft.term.write(1,4,"Rotate east-west axis...")print("builder.lua 561")turtlecraft.term.write(1,5,"(0 - 360): ")print("builder.lua 562")aR=math.max(0,math.min(360,tonumber(read()or 0)))print("builder.lua 563")turtlecraft.term.write(1,4,"Rotate north-south axis...")print("builder.lua 565")turtlecraft.term.write(1,5,"(0 - 360): ")print("builder.lua 566")aS=math.max(0,math.min(360,tonumber(read()or 0)))print("builder.lua 567")turtlecraft.term.write(1,4,"Rotate up-down axis...")print("builder.lua 569")turtlecraft.term.write(1,5,"(0 - 360): ")print("builder.lua 570")aT=math.max(0,math.min(360,tonumber(read()or 0)))print("builder.lua 571")end;local aU=0;local aV=0;local aW=0;print("builder.lua 574")turtlecraft.term.clear("Offset Shape")print("builder.lua 575")turtlecraft.term.write(1,4,"Would you like to offset your shape?")print("builder.lua 576")turtlecraft.term.write(1,5,"(y or n): ")print("builder.lua 577")if read()=="y"then turtlecraft.term.write(1,4,"Offset east-west...")print("builder.lua 579")turtlecraft.term.write(1,5,"(-500 to 500): ")print("builder.lua 580")aU=math.max(-500,math.min(500,tonumber(read()or 0)))print("builder.lua 581")turtlecraft.term.write(1,4,"Offset north-south...")print("builder.lua 583")turtlecraft.term.write(1,5,"(-500 to 500): ")print("builder.lua 584")aV=math.max(-500,math.min(500,tonumber(read()or 0)))print("builder.lua 585")turtlecraft.term.write(1,4,"Offset up-down...")print("builder.lua 587")turtlecraft.term.write(1,5,"(-500 to 500): ")print("builder.lua 588")aW=math.max(-500,math.min(500,tonumber(read()or 0)))print("builder.lua 589")end;turtlecraft.term.clear("Generating Shape")print("builder.lua 592")turtlecraft.term.write(1,4,"Generating your shape...")print("builder.lua 593")for i,v in ipairs(am)do n.scaleVector(v,aO,aP,aQ)print("builder.lua 596")n.rotateVector(v,aR,aS,aT)print("builder.lua 597")v.x=v.x+aU;print("builder.lua 598")v.y=v.y+aV;print("builder.lua 599")v.z=v.z+aW;print("builder.lua 600")n.roundVector(v)print("builder.lua 601")table.insert(c.data,v)print("builder.lua 602")end;c.data=Z.sortVectors(c.data)print("builder.lua 604")c.save()print("builder.lua 605")turtlecraft.term.clear("Add Shape")print("builder.lua 607")turtlecraft.term.write(1,4,"All done!")print("builder.lua 608")turtlecraft.input.readKey(5)print("builder.lua 609")end;if k.isEnabled()then local l=k.get()print("builder.lua 613")az(l)print("builder.lua 614")end end;turtlecraft.scope()print("builder.lua 617")
--help.lua
turtlecraft.help={}turtlecraft.scope=function()local a=function()print("Press any key to read more...")print("help.lua 5")turtlecraft.input.readKey()print("help.lua 6")term.clear()print("help.lua 7")term.setCursorPos(1,1)print("help.lua 8")end;local b=function(c)local d,e=term.getSize()print("help.lua 12")term.clear()print("help.lua 13")term.setCursorPos(1,1)print("help.lua 14")local f=1;print("help.lua 16")local g=""print("help.lua 17")local h=string.gmatch(c,"[^\n]+")print("help.lua 18")for i in h do local j=string.gmatch(i,"%S+")print("help.lua 20")for k in j do local k=k.." "print("help.lua 22")local l=string.len(k)print("help.lua 23")local m=string.len(g)print("help.lua 24")if m+l>=d-1 then print(g)print("help.lua 26")g=""print("help.lua 27")f=f+1;print("help.lua 28")if f>=e-1 then a()print("help.lua 30")f=1;print("help.lua 31")end end;g=g..k;print("help.lua 34")end;print(g)print("help.lua 36")g=""print("help.lua 37")f=f+1;print("help.lua 38")if f>=e-1 then a()print("help.lua 40")f=1;print("help.lua 41")end end;a()print("help.lua 44")end;turtlecraft.help.general=function()local c="Turtlecraft is a menu-driven system that will help you utilize your turtle for various creating, digging, and collection functions.\n".."Select 'Dig functions' to excavate, fill/clear areas, or 'eat'.\n".."Select 'Build functions' to have your turtle help you create 2d and 3d shapes.\n".."There is a whole world of things you can make your turtle do. Turtlecraft will only help you with these few things.\n"print("help.lua 51")b(c)print("help.lua 52")end;turtlecraft.help.dig=function()local c="Excavate: This will dig directly in front of the turtle's current position. ".."You will be able to specify how far forward, left, right, up, and down to dig. ".."The turtle will always try to unload directly behind it's start position when it is full. ".."It will also return to its start position for more fuel when it is empty. ".."If the turtle is unloaded or interrupted it will attempt to resume the next time it reloads ".."automatically.\n\n".."Eat: This will attempt to eat blocks starting from its current location. ".."This will not return when out of fuel or full of inventory. You will need to find ".."and satisfy the turtle's needs.\n".."WARNING: This can end up very bad if left unattended! DO NOT LEAVE UNATTENDED!\n".."Fill: This will attempt to fill an area using a circulating movement pattern. ".."This must be pre-loaded with blocks to unload and the turtle will not return ".."to reload or refuel. This will not dig or break blocks for any reason.\n".."WARNING: Your turtle is very likely to get stuck when filling in non-box shapes. ".."For non-box shapes always start the turtle in a small area to work its way into a large area ".."to avoid boxing itself in a corner. YOU MAY LOSE YOUR TURTLE. \n\n".."Empty: Much like 'Eat', this will attempt to empty an area, but will only eat one type of block. ".."The block that it will eat can either be pre-loaded into slot 2 (slot 1 is for fuel and ignored) ".."or the turtle will eat the first block that it finds above or below and then only continue to eat that type. ".."This uses a circulating movement pattern to find blocks and should probably not be left unattended. ".."This will not return to refuel or unload and will instead wait for you to fix whatever it needs ".."at whatever its current location.\n".."WARNING: This pattern may wander off. You should probably not leave this unattended."print("help.lua 78")b(c)print("help.lua 79")end;turtlecraft.help.build=function()local c="Project: This is your virtual 3d 'canvas' that you are creating when adding shapes.\n".."Clear: This will erase all data from your project.\n".."Add: This will add a new shape (sphere, line, cube, etc...) to your project.\n".."Stats: This will calculate how many blocks and space your project requires.\n".."Send to monitor: This will attempt to render your current project on a monitor using ASCII art. ".."The bigger your monitor the better you will be able to see what your project should look like ".."when it is built.\n".."Start building: This will tell the turtle to start building your project. It will build from bottom ".."to top and will not return to refuel or reload. If the turtle runs out of fuel or blocks to build with ".."it must be given more supplies at its current position. If the turtle is unloaded or otherwise ".."interrupted it will attempt to resume building upon reload.\n".."WARNING: Build recovery is not perfect, so there is still a small chance that when the turtle ".."resumes building that it could get offset a square."print("help.lua 95")b(c)print("help.lua 96")end end;turtlecraft.scope()print("help.lua 99")
--menu.lua
turtlecraft.menu={}turtlecraft.menu[1]={title="Dig functions",action={},print("menu.lua 4")}turtlecraft.menu[1].action={}print("menu.lua 6")turtlecraft.menu[1].action[1]={title="Excavate",action=turtlecraft.excavate.start}print("menu.lua 10")turtlecraft.menu[1].action[2]={title="Eat Area",action=turtlecraft.seeker.eat}print("menu.lua 14")turtlecraft.menu[1].action[3]={title="Fill Area",action=turtlecraft.seeker.fill}print("menu.lua 18")turtlecraft.menu[1].action[4]={title="Empty Area",action=turtlecraft.seeker.unfill}print("menu.lua 22")turtlecraft.menu[1].action[5]={title="Halp meh!",action=turtlecraft.help.dig}print("menu.lua 26")turtlecraft.menu[2]={title="Build functions",action={},print("menu.lua 30")}turtlecraft.menu[2].action={}print("menu.lua 32")turtlecraft.menu[2].action[1]={title="Clear project",action=turtlecraft.builder.clear}print("menu.lua 36")turtlecraft.menu[2].action[2]={title="Add a shape",action=turtlecraft.builder.add}print("menu.lua 40")turtlecraft.menu[2].action[3]={title="Trim project",action=turtlecraft.builder.trim}print("menu.lua 44")turtlecraft.menu[2].action[4]={title="Project stats",action=turtlecraft.builder.stats}print("menu.lua 48")turtlecraft.menu[2].action[5]={title="Send to monitor",action=function()term.clear()print("Not Yet Implemented")read()end}print("menu.lua 52")turtlecraft.menu[2].action[6]={title="Start building",action=turtlecraft.builder.start}print("menu.lua 56")turtlecraft.menu[2].action[7]={title="Halp meh!",action=turtlecraft.help.build}print("menu.lua 60")turtlecraft.menu[3]={title="Halp meh!",action=turtlecraft.help.general}turtlecraft.scope=function()local a=turtlecraft.term;print("menu.lua 68")local b=1;print("menu.lua 69")local c={}print("menu.lua 70")table.insert(c,turtlecraft.menu)print("menu.lua 71")local d=a.write;print("menu.lua 73")local e=function()local f=c[table.getn(c)]print("menu.lua 76")return f end;local g=function()a.clear("Menu","** Use up/down and left/enter keys **")print("menu.lua 81")local menu=e()print("menu.lua 83")for h,f in ipairs(menu)do local i=f.title;print("menu.lua 85")if h==b then i=">"..i.."<"else i=" "..i end;a.scrolled(1,h,b,i)print("menu.lua 88")end end;local j=function()local menu=e()print("menu.lua 93")local f=menu[b].action;print("menu.lua 94")if type(f)=="function"then f()print("menu.lua 96")else table.insert(c,f)print("menu.lua 98")end end;local k=function()if table.getn(c)>1 then b=1;print("menu.lua 104")table.remove(c)print("menu.lua 105")end end;local l=function()local menu=e()print("menu.lua 110")if b<table.getn(menu)then b=b+1;print("menu.lua 112")end end;local m=function()if b>1 then b=b-1;print("menu.lua 118")end end;if not turtlecraft.position.isInSync()then term.clear()print("menu.lua 123")d(1,1,"The turtle's position has gotten out of sync.")print("menu.lua 124")d(1,2,"If there was a function in progress it has likely been cancelled.")print("menu.lua 125")d(1,3,"Press any key to continue")print("menu.lua 126")local n,n,n,o=turtlecraft.position.get()print("menu.lua 127")turtlecraft.position.set(0,0,0,o)print("menu.lua 128")turtlecraft.input.readKey()print("menu.lua 129")end;while true do g()print("menu.lua 133")sleep(0.01)print("menu.lua 134")local p=turtlecraft.input.readKey()print("menu.lua 135")if p==28 then j()end;if p==200 then m()end;if p==208 then l()end;if p==203 then k()end end end;turtlecraft.scope()print("menu.lua 142")
